Ext.namespace("GeoExt");GeoExt.MapPanel=Ext.extend(Ext.Panel,{map:null,layers:null,center:null,zoom:null,prettyStateKeys:false,extent:null,stateEvents:["aftermapmove","afterlayervisibilitychange","afterlayeropacitychange"],initComponent:function(){if(!(this.map instanceof OpenLayers.Map)){this.map=new OpenLayers.Map(Ext.applyIf(this.map||{},{allOverlays:true}));}
var layers=this.layers;if(!layers||layers instanceof Array){this.layers=new GeoExt.data.LayerStore({layers:layers,map:this.map.layers.length>0?this.map:null});}
if(typeof this.center=="string"){this.center=OpenLayers.LonLat.fromString(this.center);}else if(this.center instanceof Array){this.center=new OpenLayers.LonLat(this.center[0],this.center[1]);}
if(typeof this.extent=="string"){this.extent=OpenLayers.Bounds.fromString(this.extent);}else if(this.extent instanceof Array){this.extent=OpenLayers.Bounds.fromArray(this.extent);}
GeoExt.MapPanel.superclass.initComponent.call(this);this.addEvents("aftermapmove","afterlayervisibilitychange","afterlayeropacitychange");this.map.events.on({"moveend":this.onMoveend,"changelayer":this.onLayerchange,scope:this});},onMoveend:function(){this.fireEvent("aftermapmove");},onLayerchange:function(e){if(e.property){if(e.property==="visibility"){this.fireEvent("afterlayervisibilitychange");}else if(e.property==="opacity"){this.fireEvent("afterlayeropacitychange");}}},applyState:function(state){this.center=new OpenLayers.LonLat(state.x,state.y);this.zoom=state.zoom;var i,l,layer,layerId,visibility,opacity;var layers=this.map.layers;for(i=0,l=layers.length;i<l;i++){layer=layers[i];layerId=this.prettyStateKeys?layer.name:layer.id;visibility=state["visibility_"+layerId];if(visibility!==undefined){visibility=(/^true$/i).test(visibility);if(layer.isBaseLayer){if(visibility){this.map.setBaseLayer(layer);}}else{layer.setVisibility(visibility);}}
opacity=state["opacity_"+layerId];if(opacity!==undefined){layer.setOpacity(opacity);}}},getState:function(){var state;if(!this.map){return;}
var center=this.map.getCenter();state={x:center.lon,y:center.lat,zoom:this.map.getZoom()};var i,l,layer,layerId,layers=this.map.layers;for(i=0,l=layers.length;i<l;i++){layer=layers[i];layerId=this.prettyStateKeys?layer.name:layer.id;state["visibility_"+layerId]=layer.getVisibility();state["opacity_"+layerId]=layer.opacity==null?1:layer.opacity;}
return state;},updateMapSize:function(){if(this.map){this.map.updateSize();}},renderMap:function(){var map=this.map;map.render(this.body.dom);this.layers.bind(map);if(map.layers.length>0){if(this.center||this.zoom!=null){map.setCenter(this.center,this.zoom);}else if(this.extent){map.zoomToExtent(this.extent);}else{map.zoomToMaxExtent();}}},afterRender:function(){GeoExt.MapPanel.superclass.afterRender.apply(this,arguments);if(!this.ownerCt){this.renderMap();}else{this.ownerCt.on("move",this.updateMapSize,this);this.ownerCt.on({"afterlayout":{fn:this.renderMap,scope:this,single:true}});}},onResize:function(){GeoExt.MapPanel.superclass.onResize.apply(this,arguments);this.updateMapSize();},onBeforeAdd:function(item){if(typeof item.addToMapPanel==="function"){item.addToMapPanel(this);}
GeoExt.MapPanel.superclass.onBeforeAdd.apply(this,arguments);},remove:function(item,autoDestroy){if(typeof item.removeFromMapPanel==="function"){item.removeFromMapPanel(this);}
GeoExt.MapPanel.superclass.remove.apply(this,arguments);},beforeDestroy:function(){if(this.ownerCt){this.ownerCt.un("move",this.updateMapSize,this);}
if(this.map&&this.map.events){this.map.events.un({"moveend":this.onMoveend,"changelayer":this.onLayerchange,scope:this});}
if(!this.initialConfig.map||!(this.initialConfig.map instanceof OpenLayers.Map)){if(this.map&&this.map.destroy){this.map.destroy();}}
delete this.map;GeoExt.MapPanel.superclass.beforeDestroy.apply(this,arguments);}});GeoExt.MapPanel.guess=function(){return Ext.ComponentMgr.all.find(function(o){return o instanceof GeoExt.MapPanel;});};Ext.reg('gx_mappanel',GeoExt.MapPanel);Ext.namespace("GeoExt.data");GeoExt.data.LayerRecord=Ext.data.Record.create([{name:"layer"},{name:"title",type:"string",mapping:"name"}]);GeoExt.data.LayerRecord.prototype.getLayer=function(){return this.get("layer");};GeoExt.data.LayerRecord.prototype.setLayer=function(layer){if(layer!==this.data.layer){this.dirty=true;if(!this.modified){this.modified={};}
if(this.modified.layer===undefined){this.modified.layer=this.data.layer;}
this.data.layer=layer;if(!this.editing){this.afterEdit();}}};GeoExt.data.LayerRecord.prototype.clone=function(id){var layer=this.getLayer()&&this.getLayer().clone();return new this.constructor(Ext.applyIf({layer:layer},this.data),id||layer.id);};GeoExt.data.LayerRecord.create=function(o){var f=Ext.extend(GeoExt.data.LayerRecord,{});var p=f.prototype;p.fields=new Ext.util.MixedCollection(false,function(field){return field.name;});GeoExt.data.LayerRecord.prototype.fields.each(function(f){p.fields.add(f);});if(o){for(var i=0,len=o.length;i<len;i++){p.fields.add(new Ext.data.Field(o[i]));}}
f.getField=function(name){return p.fields.get(name);};return f;};Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.LayerReader=function(meta,recordType){meta=meta||{};if(!(recordType instanceof Function)){recordType=GeoExt.data.LayerRecord.create(recordType||meta.fields||{});}
GeoExt.data.LayerReader.superclass.constructor.call(this,meta,recordType);};Ext.extend(GeoExt.data.LayerReader,Ext.data.DataReader,{totalRecords:null,readRecords:function(layers){var records=[];if(layers){var recordType=this.recordType,fields=recordType.prototype.fields;var i,lenI,j,lenJ,layer,values,field,v;for(i=0,lenI=layers.length;i<lenI;i++){layer=layers[i];values={};for(j=0,lenJ=fields.length;j<lenJ;j++){field=fields.items[j];v=layer[field.mapping||field.name]||field.defaultValue;v=field.convert(v);values[field.name]=v;}
values.layer=layer;records[records.length]=new recordType(values,layer.id);}}
return{records:records,totalRecords:this.totalRecords!=null?this.totalRecords:records.length};}});Ext.namespace("GeoExt.data");GeoExt.data.LayerStoreMixin=function(){return{map:null,reader:null,constructor:function(config){config=config||{};config.reader=config.reader||new GeoExt.data.LayerReader({},config.fields);delete config.fields;var map=config.map instanceof GeoExt.MapPanel?config.map.map:config.map;delete config.map;if(config.layers){config.data=config.layers;}
delete config.layers;var options={initDir:config.initDir};delete config.initDir;arguments.callee.superclass.constructor.call(this,config);if(map){this.bind(map,options);}},bind:function(map,options){if(this.map){return;}
this.map=map;options=options||{};var initDir=options.initDir;if(options.initDir==undefined){initDir=GeoExt.data.LayerStore.MAP_TO_STORE|GeoExt.data.LayerStore.STORE_TO_MAP;}
var layers=map.layers.slice(0);if(initDir&GeoExt.data.LayerStore.STORE_TO_MAP){this.each(function(record){this.map.addLayer(record.getLayer());},this);}
if(initDir&GeoExt.data.LayerStore.MAP_TO_STORE){this.loadData(layers,true);}
map.events.on({"changelayer":this.onChangeLayer,"addlayer":this.onAddLayer,"removelayer":this.onRemoveLayer,scope:this});this.on({"load":this.onLoad,"clear":this.onClear,"add":this.onAdd,"remove":this.onRemove,"update":this.onUpdate,scope:this});this.data.on({"replace":this.onReplace,scope:this});},unbind:function(){if(this.map){this.map.events.un({"changelayer":this.onChangeLayer,"addlayer":this.onAddLayer,"removelayer":this.onRemoveLayer,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.data.un("replace",this.onReplace,this);this.map=null;}},onChangeLayer:function(evt){var layer=evt.layer;var recordIndex=this.findBy(function(rec,id){return rec.getLayer()===layer;});if(recordIndex>-1){var record=this.getAt(recordIndex);if(evt.property==="order"){if(!this._adding&&!this._removing){var layerIndex=this.map.getLayerIndex(layer);if(layerIndex!==recordIndex){this._removing=true;this.remove(record);delete this._removing;this._adding=true;this.insert(layerIndex,[record]);delete this._adding;}}}else if(evt.property==="name"){record.set("title",layer.name);}else{this.fireEvent("update",this,record,Ext.data.Record.EDIT);}}},onAddLayer:function(evt){if(!this._adding){var layer=evt.layer;this._adding=true;this.loadData([layer],true);delete this._adding;}},onRemoveLayer:function(evt){if(this.map.unloadDestroy){if(!this._removing){var layer=evt.layer;this._removing=true;this.remove(this.getById(layer.id));delete this._removing;}}else{this.unbind();}},onLoad:function(store,records,options){if(!Ext.isArray(records)){records=[records];}
if(options&&!options.add){this._removing=true;for(var i=this.map.layers.length-1;i>=0;i--){this.map.removeLayer(this.map.layers[i]);}
delete this._removing;var len=records.length;if(len>0){var layers=new Array(len);for(var j=0;j<len;j++){layers[j]=records[j].getLayer();}
this._adding=true;this.map.addLayers(layers);delete this._adding;}}},onClear:function(store){this._removing=true;for(var i=this.map.layers.length-1;i>=0;i--){this.map.removeLayer(this.map.layers[i]);}
delete this._removing;},onAdd:function(store,records,index){if(!this._adding){this._adding=true;var layer;for(var i=records.length-1;i>=0;--i){layer=records[i].getLayer();this.map.addLayer(layer);if(index!==this.map.layers.length-1){this.map.setLayerIndex(layer,index);}}
delete this._adding;}},onRemove:function(store,record,index){if(!this._removing){var layer=record.getLayer();if(this.map.getLayer(layer.id)!=null){this._removing=true;this.removeMapLayer(record);delete this._removing;}}},onUpdate:function(store,record,operation){if(operation===Ext.data.Record.EDIT){if(record.modified&&record.modified.title){var layer=record.getLayer();var title=record.get("title");if(title!==layer.name){layer.setName(title);}}}},removeMapLayer:function(record){this.map.removeLayer(record.getLayer());},onReplace:function(key,oldRecord,newRecord){this.removeMapLayer(oldRecord);},getByLayer:function(layer){var index=this.findBy(function(r){return r.getLayer()===layer;});if(index>-1){return this.getAt(index);}},destroy:function(){this.unbind();GeoExt.data.LayerStore.superclass.destroy.call(this);}};};GeoExt.data.LayerStore=Ext.extend(Ext.data.Store,new GeoExt.data.LayerStoreMixin);GeoExt.data.LayerStore.MAP_TO_STORE=1;GeoExt.data.LayerStore.STORE_TO_MAP=2;Ext.namespace('GeoExt','GeoExt.data');GeoExt.data.ProtocolProxy=function(config){Ext.apply(this,config);GeoExt.data.ProtocolProxy.superclass.constructor.apply(this,arguments);};Ext.extend(GeoExt.data.ProtocolProxy,Ext.data.DataProxy,{protocol:null,abortPrevious:true,setParamsAsOptions:false,response:null,load:function(params,reader,callback,scope,arg){if(this.fireEvent("beforeload",this,params)!==false){var o={params:params||{},request:{callback:callback,scope:scope,arg:arg},reader:reader};var cb=OpenLayers.Function.bind(this.loadResponse,this,o);if(this.abortPrevious){this.abortRequest();}
var options={params:params,callback:cb,scope:this};Ext.applyIf(options,arg);if(this.setParamsAsOptions===true){Ext.applyIf(options,options.params);delete options.params;}
this.response=this.protocol.read(options);}else{callback.call(scope||this,null,arg,false);}},abortRequest:function(){if(this.response){this.protocol.abort(this.response);this.response=null;}},loadResponse:function(o,response){if(response.success()){var result=o.reader.read(response);this.fireEvent("load",this,o,o.request.arg);o.request.callback.call(o.request.scope,result,o.request.arg,true);}else{this.fireEvent("loadexception",this,o,response);o.request.callback.call(o.request.scope,null,o.request.arg,false);}}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureRecord=Ext.data.Record.create([{name:"feature"},{name:"state"},{name:"fid"}]);GeoExt.data.FeatureRecord.prototype.getFeature=function(){return this.get("feature");};GeoExt.data.FeatureRecord.prototype.setFeature=function(feature){if(feature!==this.data.feature){this.dirty=true;if(!this.modified){this.modified={};}
if(this.modified.feature===undefined){this.modified.feature=this.data.feature;}
this.data.feature=feature;if(!this.editing){this.afterEdit();}}};GeoExt.data.FeatureRecord.create=function(o){var f=Ext.extend(GeoExt.data.FeatureRecord,{});var p=f.prototype;p.fields=new Ext.util.MixedCollection(false,function(field){return field.name;});GeoExt.data.FeatureRecord.prototype.fields.each(function(f){p.fields.add(f);});if(o){for(var i=0,len=o.length;i<len;i++){p.fields.add(new Ext.data.Field(o[i]));}}
f.getField=function(name){return p.fields.get(name);};return f;};Ext.namespace('GeoExt','GeoExt.data');GeoExt.data.FeatureReader=function(meta,recordType){meta=meta||{};if(!(recordType instanceof Function)){recordType=GeoExt.data.FeatureRecord.create(recordType||meta.fields||{});}
GeoExt.data.FeatureReader.superclass.constructor.call(this,meta,recordType);};Ext.extend(GeoExt.data.FeatureReader,Ext.data.DataReader,{totalRecords:null,read:function(response){return this.readRecords(response.features);},readRecords:function(features){var records=[];if(features){var recordType=this.recordType,fields=recordType.prototype.fields;var i,lenI,j,lenJ,feature,values,field,v;for(i=0,lenI=features.length;i<lenI;i++){feature=features[i];values={};if(feature.attributes){for(j=0,lenJ=fields.length;j<lenJ;j++){field=fields.items[j];if(/[\[\.]/.test(field.mapping)){try{v=new Function("obj","return obj."+field.mapping)(feature.attributes);}catch(e){v=field.defaultValue;}}
else{v=feature.attributes[field.mapping||field.name]||field.defaultValue;}
if(field.convert){v=field.convert(v);}
values[field.name]=v;}}
values.feature=feature;values.state=feature.state;values.fid=feature.fid;var id=(feature.state===OpenLayers.State.INSERT)?undefined:feature.id;records[records.length]=new recordType(values,id);}}
return{records:records,totalRecords:this.totalRecords!=null?this.totalRecords:records.length};}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureStoreMixin=function(){return{layer:null,reader:null,featureFilter:null,constructor:function(config){config=config||{};config.reader=config.reader||new GeoExt.data.FeatureReader({},config.fields);var layer=config.layer;delete config.layer;if(config.features){config.data=config.features;}
delete config.features;var options={initDir:config.initDir};delete config.initDir;arguments.callee.superclass.constructor.call(this,config);if(layer){this.bind(layer,options);}},bind:function(layer,options){if(this.layer){return;}
this.layer=layer;options=options||{};var initDir=options.initDir;if(options.initDir==undefined){initDir=GeoExt.data.FeatureStore.LAYER_TO_STORE|GeoExt.data.FeatureStore.STORE_TO_LAYER;}
var features=layer.features.slice(0);if(initDir&GeoExt.data.FeatureStore.STORE_TO_LAYER){var records=this.getRange();for(var i=records.length-1;i>=0;i--){this.layer.addFeatures([records[i].getFeature()]);}}
if(initDir&GeoExt.data.FeatureStore.LAYER_TO_STORE){this.loadData(features,true);}
layer.events.on({"featuresadded":this.onFeaturesAdded,"featuresremoved":this.onFeaturesRemoved,"featuremodified":this.onFeatureModified,scope:this});this.on({"load":this.onLoad,"clear":this.onClear,"add":this.onAdd,"remove":this.onRemove,"update":this.onUpdate,scope:this});},unbind:function(){if(this.layer){this.layer.events.un({"featuresadded":this.onFeaturesAdded,"featuresremoved":this.onFeaturesRemoved,"featuremodified":this.onFeatureModified,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.un("update",this.onUpdate,this);this.layer=null;}},getRecordFromFeature:function(feature){var record=null;if(feature.state!==OpenLayers.State.INSERT){record=this.getById(feature.id);}else{var index=this.findBy(function(r){return r.getFeature()===feature;});if(index>-1){record=this.getAt(index);}}
return record;},onFeaturesAdded:function(evt){if(!this._adding){var features=evt.features,toAdd=features;if(this.featureFilter){toAdd=[];var i,len,feature;for(var i=0,len=features.length;i<len;i++){feature=features[i];if(this.featureFilter.evaluate(feature)!==false){toAdd.push(feature);}}}
this._adding=true;this.loadData(toAdd,true);delete this._adding;}},onFeaturesRemoved:function(evt){if(!this._removing){var features=evt.features,feature,record,i;for(i=features.length-1;i>=0;i--){feature=features[i];record=this.getRecordFromFeature(feature);if(record!==undefined){this._removing=true;this.remove(record);delete this._removing;}}}},onFeatureModified:function(evt){if(!this._updating){var feature=evt.feature;var record=this.getRecordFromFeature(feature);if(record!==undefined){record.beginEdit();var attributes=feature.attributes;if(attributes){var fields=this.recordType.prototype.fields;for(var i=0,len=fields.length;i<len;i++){var field=fields.items[i];var key=field.mapping||field.name;if(key in attributes){record.set(field.name,field.convert(attributes[key]));}}}
record.set("state",feature.state);record.set("fid",feature.fid);record.setFeature(feature);this._updating=true;record.endEdit();delete this._updating;}}},addFeaturesToLayer:function(records){var i,len,features;features=new Array((len=records.length));for(i=0;i<len;i++){features[i]=records[i].getFeature();}
if(features.length>0){this._adding=true;this.layer.addFeatures(features);delete this._adding;}},onLoad:function(store,records,options){if(!options||options.add!==true){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing;this.addFeaturesToLayer(records);}},onClear:function(store){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing;},onAdd:function(store,records,index){if(!this._adding){this.addFeaturesToLayer(records);}},onRemove:function(store,record,index){if(!this._removing){var feature=record.getFeature();if(this.layer.getFeatureById(feature.id)!=null){this._removing=true;this.layer.removeFeatures([record.getFeature()]);delete this._removing;}}},onUpdate:function(store,record,operation){if(!this._updating){var defaultFields=new GeoExt.data.FeatureRecord().fields;var feature=record.getFeature();if(record.fields){var cont=this.layer.events.triggerEvent("beforefeaturemodified",{feature:feature});if(cont!==false){var attributes=feature.attributes;record.fields.each(function(field){var key=field.mapping||field.name;if(!defaultFields.containsKey(key)){attributes[key]=record.get(field.name);}});this._updating=true;this.layer.events.triggerEvent("featuremodified",{feature:feature});delete this._updating;if(this.layer.getFeatureById(feature.id)!=null){this.layer.drawFeature(feature);}}}}}};};GeoExt.data.FeatureStore=Ext.extend(Ext.data.Store,new GeoExt.data.FeatureStoreMixin);GeoExt.data.FeatureStore.LAYER_TO_STORE=1;GeoExt.data.FeatureStore.STORE_TO_LAYER=2;Ext.namespace('GeoExt.grid');GeoExt.grid.FeatureSelectionModelMixin=function(){return{autoActivateControl:true,layerFromStore:true,selectControl:null,bound:false,superclass:null,constructor:function(config){config=config||{};if(config.selectControl instanceof OpenLayers.Control.SelectFeature){if(!config.singleSelect){var ctrl=config.selectControl;config.singleSelect=!(ctrl.multiple||!!ctrl.multipleKey);}}else if(config.layer instanceof OpenLayers.Layer.Vector){this.selectControl=this.createSelectControl(config.layer,config.selectControl);delete config.layer;delete config.selectControl;}
this.superclass=arguments.callee.superclass;this.superclass.constructor.call(this,config);},initEvents:function(){this.superclass.initEvents.call(this);if(this.layerFromStore){var layer=this.grid.getStore()&&this.grid.getStore().layer;if(layer&&!(this.selectControl instanceof OpenLayers.Control.SelectFeature)){this.selectControl=this.createSelectControl(layer,this.selectControl);}}
if(this.selectControl){this.bind(this.selectControl);}},createSelectControl:function(layer,config){config=config||{};var singleSelect=config.singleSelect!==undefined?config.singleSelect:this.singleSelect;config=OpenLayers.Util.extend({toggle:true,multipleKey:singleSelect?null:(Ext.isMac?"metaKey":"ctrlKey")},config);var selectControl=new OpenLayers.Control.SelectFeature(layer,config);layer.map.addControl(selectControl);return selectControl;},bind:function(obj,options){if(!this.bound){options=options||{};this.selectControl=obj;if(obj instanceof OpenLayers.Layer.Vector){this.selectControl=this.createSelectControl(obj,options.controlConfig);}
if(this.autoActivateControl){this.selectControl.activate();}
var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){layers[i].events.on({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this});}
this.on("rowselect",this.rowSelected,this);this.on("rowdeselect",this.rowDeselected,this);this.bound=true;}
return this.selectControl;},unbind:function(){var selectControl=this.selectControl;if(this.bound){var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){layers[i].events.un({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this});}
this.un("rowselect",this.rowSelected,this);this.un("rowdeselect",this.rowDeselected,this);if(this.autoActivateControl){selectControl.deactivate();}
this.selectControl=null;this.bound=false;}
return selectControl;},featureSelected:function(evt){if(!this._selecting){var store=this.grid.store;var row=store.findBy(function(record,id){return record.getFeature()==evt.feature;});if(row!=-1&&!this.isSelected(row)){this._selecting=true;this.selectRow(row,!this.singleSelect);this._selecting=false;this.grid.getView().focusRow(row);}}},featureUnselected:function(evt){if(!this._selecting){var store=this.grid.store;var row=store.findBy(function(record,id){return record.getFeature()==evt.feature;});if(row!=-1&&this.isSelected(row)){this._selecting=true;this.deselectRow(row);this._selecting=false;this.grid.getView().focusRow(row);}}},rowSelected:function(model,row,record){var feature=record.getFeature();if(!this._selecting&&feature){var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){if(layers[i].selectedFeatures.indexOf(feature)==-1){this._selecting=true;this.selectControl.select(feature);this._selecting=false;break;}}}},rowDeselected:function(model,row,record){var feature=record.getFeature();if(!this._selecting&&feature){var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){if(layers[i].selectedFeatures.indexOf(feature)!=-1){this._selecting=true;this.selectControl.unselect(feature);this._selecting=false;break;}}}},getLayers:function(){return this.selectControl.layers||[this.selectControl.layer];}};};GeoExt.grid.FeatureSelectionModel=Ext.extend(Ext.grid.RowSelectionModel,new GeoExt.grid.FeatureSelectionModelMixin);Ext.namespace('gwst');gwst.settings={minimum_draw_zoom:4,zoom_error_text:'<p class="help-win">For accuracy reasons, you must zoom in further before drawing on the map. Please zoom in and try again.</p>',adminEmail:'fish@ecotrust.org',step1text:'<b>1. Select one place you participated in the above activity during your last trip.  If this place is not in the lists below, skip to step two.</b>',zoomText:'',zoomImgText:'<img src="/media/img/help_nav.png"/>',navText:'<b>2. Use the navigation controls to zoom the map in and center it over the location of the activity.</b>',markerText:'<b>3. Place a marker on the map where the activity took place. Start by clicking the \'Add New Marker\' button on the map.</b>',polyDrawText:'<b>3. Draw the area on the map where the activity took place. Start by clicking the \'Draw New Area\' button on the map.</b>',markerImgText:'<img src="/media/img/help_point_steps.png">',polyImgText:'<img src="/media/img/help_draw_poly.png"/>',repeatPointText:'<b>4.Place markers on the rest of the locations you particpated in this activity on your last trip, repeating steps 1-3 as needed.  Click \'Continue\' when you are done.</b>',repeatPolyText:'<b>4.Draw the rest of the areas you particpated in this activity on your last trip, repeating steps 1-3 as needed.  Click \'Continue\' when you are done.</b>',cityComboText:'Oregon coast towns',placeComboText:'Places of interest (parks, beaches, etc.)',point_panel_one_instructions:'<h2>Instructions</h2><p>In this next step, you will <u>place markers</u> on a map where you participated in the following activity:</p>',point_panel_two_instructions:'<h3>Example</h3><img class="example-img" src="/media/img/help_point_intro.jpg"><p>If you are not able to complete this step for this activity you can skip to the next one.</p><p>Click the \'Continue\' button</p>',poly_panel_one_instructions:'<h2>Instructions</h2><p>In this next step, you will <u>draw</u> on a map the areas where you participated in the following activity:</p>',poly_panel_two_instructions:'<h3>Example</h3><img class="example-img" src="/media/img/help_poly_intro.jpg"><p>If you are not able to complete the step for an activity you can skip to the next one.</p><p>Click the \'Continue\' button</p>',shape_error_text:'<p class="error_text"><b>There was a problem</b> <img class="vab-img" src="/media/img/exclamation.png"></p>',shape_self_overlap_text:'<p>Your area is not valid because it overlaps itself (example below).</p> <img class="invalid-image" src="/media/img/invalid_bowtie.png">',shape_other_overlap_text:'<p>Your new area overlaps one of your other areas. They are not allowed to do this.</p>  <p>If you have two that border each other, just draw the second one along the edge of the first as best as you can.</p><img class="invalid-image" src="/media/img/invalid_overlap.png">',invalid_poly_text:'<p>Your area is not valid because it either had less than 3 \'corners\' (the minimum required) or it crosses over itself (a bowtie shape is an example).</p>',route_invalid_text:'<p>Your route is not valid because it only had one point.  You may have accidentally double-clicked and completed it before you were done.  Please try again and create at least two waypoints for your route.</p>',help_text:'If you need help, call 732-263-5662, email <a href="mailto:ljordan@monmouth.edu">ljordan@monmouth.edu</a>, or refer to our <a target="_blank" href="/detailed_instructions">detailed instructions</a> page'};gwst.settings.urls={shapes:'/draw/shapes/',status:'/draw/status/',check:'/draw/check/',shape_validate:'/draw/shape/validate/',demo:'/videos/demo',complete:'/complete/'};Ext.Ajax.timeout=120000;Ext.namespace('gwst.DrawApp');gwst.DrawApp=Ext.extend(Ext.util.Observable,{constructor:function(){gwst.DrawApp.superclass.constructor.call(this);},init:function(){OpenLayers.Util.onImageLoadError=function(){this.src="/media/img/geowebcache-404_RBSW.png";this.style.display="";};this.draw_manager=new gwst.DrawManager();this.draw_manager.startInit();}});Ext.namespace('gwst');gwst.DrawManager=Ext.extend(Ext.util.Observable,{cur_feature:null,cancelWinOffset:[540,8],routeCancelWinOffset:[380,60],routeUndoWinOffset:[380,112],resetMapWinOffset:[380,8],mapHelpWinOffset:[380,65],activityNum:0,route_factors_other:null,act_list_items:null,fish_tgts:null,view_tgts:null,dive_tgts:null,activity_shapes_drawn:false,help_on:true,autoRoundTrip:false,constructor:function(){gwst.DrawManager.superclass.constructor.call(this);this.mapPanelListeners={'render':this.mapPanelCreated.createDelegate(this)};},startInit:function(){this.createError();Ext.Ajax.request({url:gwst.settings.urls.check,method:'GET',disableCachingParam:true,success:this.finInit,failure:function(response,opts){gwst.error.load('An error has occurred while trying to check for previous survey instance.');},scope:this});},finInit:function(response){var complete=Ext.decode(response.responseText);if(complete.is_complete){window.location=return_url;}else{this.enableUnloadWarning();this.loadViewport();this.loadResetMapWin();this.startIntroStep();}},startIntroStep:function(){this.loadIntroPanel();Ext.getCmp('west-panel-container').disable();this.showHelp(true);},finIntroStep:function(){this.zoomed=this.checkZoom();if(this.zoomed){this.help_on=false;this.showHelp(false);this.startDrawInstructStep();}},startDrawInstructStep:function(){if(!this.plotRoutePanel){this.loadPlotRoutePanel();Ext.MessageBox.show({title:'Route Plotting',msg:'<p class="help-win">You are now in route plotting mode.</p><p class="help-win">See panel on left for important instructions.</p><p class="help-win">Click OK to begin plotting.</p>',buttons:Ext.Msg.OK,minWidth:450,scope:this});}else{this.loadPlotRoutePanel();}},finDrawInstructStep:function(){this.saveNewRoute();},startEditRouteStep:function(){this.loadEditRoutePanel();if(!this.autoRoundTrip){this.mapPanel.lineFinish();}
this.enableFeatureEdit();},finEditRouteStep:function(){this.disableFeatureEdit();this.validateShape(this.cur_feature,'route');},skipActivitiesStep:function(){Ext.Msg.show({title:'Skip Activities?',msg:'<p class="help-win">Are you sure you want to skip the drawing of your activity areas?</p>',buttons:Ext.Msg.YESNO,fn:this.skipActivitiesCheck.createDelegate(this),icon:Ext.MessageBox.QUESTION});},skipDrawingStep:function(){Ext.Msg.show({title:'Stop Drawing?',msg:'<p class="help-win">Are you sure you want to stop drawing activity areas? If you have drawn other areas, they are already saved.<p>',buttons:Ext.Msg.YESNO,fn:this.stopDrawingCheck.createDelegate(this),minWidth:300,icon:Ext.MessageBox.QUESTION});},skipActivitiesCheck:function(id,text,opt){if(id=='yes'){this.updateStatus('act_status','Skipped',this.finUpdateActStatus);}},stopDrawingCheck:function(id,text,opt){if(id=='yes'){this.mapPanel.disablePointDraw();if(this.activity_shapes_drawn){this.stopDrawing();}else{this.updateStatus('act_status','Skipped',this.finUpdateActStatus);}}},startActivityAreasStep:function(){this.mapPanel.enable();if(!this.actAreasPanel){Ext.MessageBox.show({title:'Activity Plotting',msg:'<p class="help-win">You are now in activity plotting mode.</p><p class="help-win">See panel on left for important instructions.</p><p class="help-win">Click OK to begin plotting.</p>',buttons:Ext.Msg.OK,minWidth:450,scope:this});}
this.loadActivityAreasPanel();},startActivityInfoStep:function(){this.loadActivityQuestionsPanel();},finActivityInfoStep:function(){this.act_list_items={};for(this.i=0;this.i<this.activityQuestionsPanel.answer_one.items.length;this.i++){this.act_list_item=this.activityQuestionsPanel.answer_one.items.get(this.i);this.act_list_items[this.act_list_item.name]=this.act_list_item.checked;}
if(this.act_list_items['other']){this.act_list_items['other']=this.activityQuestionsPanel.other_one.getValue();}
this.activityQuestionsPanel.resetPanel();this.startFishingQuestionsStep();},startFishingQuestionsStep:function(){if(this.act_list_items['fishing']){this.loadFishingQuestionsPanel();}else{this.startViewingQuestionsStep();}},getFishingAnswers:function(){this.fish_tgts={};for(this.i=0;this.i<this.fishingQuestionsPanel.fishing_one.items.length;this.i++){this.fish_target=this.fishingQuestionsPanel.fishing_one.items.get(this.i);this.fish_tgts[this.fish_target.name]=this.fish_target.checked;}
if(this.fish_tgts['fish-other']){this.fish_tgts['fish-other']=this.fishingQuestionsPanel.other_fish.getValue();}
this.finFishingQuestionsStep();},finFishingQuestionsStep:function(){this.fishingQuestionsPanel.resetPanel();this.startViewingQuestionsStep();},startViewingQuestionsStep:function(){if(this.act_list_items['wildlife-viewing']){this.loadViewingQuestionsPanel();}else{this.startDivingQuestionsStep();}},getViewingAnswers:function(){this.view_tgts={};for(this.i=0;this.i<this.viewingQuestionsPanel.viewing_one.items.length;this.i++){this.view_target=this.viewingQuestionsPanel.viewing_one.items.get(this.i);this.view_tgts[this.view_target.name]=this.view_target.checked;}
if(this.view_tgts['view-other']){this.view_tgts['view-other']=this.viewingQuestionsPanel.other_view.getValue();}
this.finViewingQuestionsStep();},finViewingQuestionsStep:function(){this.viewingQuestionsPanel.resetPanel();this.startDivingQuestionsStep();},startDivingQuestionsStep:function(){if(this.act_list_items['diving']){this.loadDivingQuestionsPanel();}else{this.saveNewPoint();}},getDivingAnswers:function(){this.dive_tgts={};for(this.i=0;this.i<this.divingQuestionsPanel.diving_one.items.length;this.i++){this.dive_target=this.divingQuestionsPanel.diving_one.items.get(this.i);this.dive_tgts[this.dive_target.name]=this.dive_target.checked;}
if(this.dive_tgts['dive-other']){this.dive_tgts['dive-other']=this.divingQuestionsPanel.other_dive.getValue();}
this.finDivingQuestionsStep();},finDivingQuestionsStep:function(){this.divingQuestionsPanel.resetPanel();this.saveNewPoint();},startMoreActivitesStep:function(){this.loadMoreActivitiesPanel();},finMoreActivitiesStep:function(result){if(!result.draw_new){this.updateStatus('complete',true,this.finUpdateCompleteStatus);}else{this.route_factors_other=null;this.act_list_items=null;this.fish_tgts=null;this.view_tgts=null;this.dive_tgts=null;this.startActivityAreasStep();}},startFinishedStep:function(){this.disableUnloadWarning();this.loadFinishPanel();},finFinishedStep:function(){window.location=return_url;},startInvalidRouteStep:function(status_code){this.loadInvalidRoutePanel(status_code);this.mapPanel.removeLastFeature();},finInvalidRouteStep:function(){this.mapPanel.removeLastFeature();this.startDrawInstructStep();},showHelp:function(result){if(!this.navHelpWin){this.navHelpWin=new gwst.widgets.NavHelpWindow();this.navHelpWin.on('view-nav-details',this.loadNavigationDetails,this);this.navHelpWin.on('hide',function(){this.showHelp(false);Ext.getCmp('west-panel-container').enable();},this);}
this.help_on=result;if(result){this.navHelpWin.show();this.navHelpWin.alignTo(document.body,"tl-tl",this.mapHelpWinOffset);}else{if(this.navHelpWin){this.navHelpWin.hide();}}
if(this.introPanel&&!this.introPanel.hidden){this.introPanel.help_box.setValue(result);}
if(this.plotRoutePanel&&!this.plotRoutePanel.hidden){this.plotRoutePanel.help_box.setValue(result);}
if(this.actAreasPanel&&!this.actAreasPanel.hidden){this.actAreasPanel.help_box.setValue(result);}},loadNavigationDetails:function(){if(!this.navDetailsWin){this.navDetailsWin=new gwst.widgets.NavDetailsWindow();}
this.navDetailsWin.show();},loadIntroPanel:function(){this.introPanel=new gwst.widgets.IntroPanel();this.introPanel.on('intro-cont',this.finIntroStep,this);this.introPanel.on('show-help',this.showHelp,this);this.viewport.setWestPanel(this.introPanel);this.introPanel.help_box.on('show-help',this.showHelp,this);},loadPlotRoutePanel:function(){if(!this.plotRoutePanel){this.plotRoutePanel=new gwst.widgets.PlotRoutePanel({help_checked:this.help_on});}
this.viewport.setWestPanel(this.plotRoutePanel);this.plotRoutePanel.help_box.on('show-help',this.showHelp,this);this.activateRouteDraw();},loadViewport:function(){this.viewport=new gwst.widgets.MainViewport({mapPanelListeners:this.mapPanelListeners});},activateRouteDraw:function(){this.mapPanel.enableLineDraw();this.loadRouteCancelWin();this.loadRouteUndoWin();},activatePointDraw:function(){this.mapPanel.enablePointDraw();},loadRouteCancelWin:function(){if(!this.routeCancelWin){this.routeCancelWin=new gwst.widgets.CancelWindow();this.routeCancelWin.on('cancel-clicked',this.mapPanel.cancelLine,this.mapPanel);}
this.routeCancelWin.show();this.routeCancelWin.alignTo(document.body,"tl-tl",this.routeCancelWinOffset);},loadRouteUndoWin:function(){if(!this.routeUndoWin){this.routeUndoWin=new gwst.widgets.UndoWindow();this.routeUndoWin.on('undo-clicked',this.mapPanel.undoLine,this.mapPanel);}
this.routeUndoWin.show();this.routeUndoWin.alignTo(document.body,"tl-tl",this.routeUndoWinOffset);},loadCancelWin:function(){if(!this.cancelWin){this.cancelWin=new gwst.widgets.CancelWindow();this.cancelWin.on('cancel-clicked',this.mapPanel.cancelPoly,this.mapPanel);}
this.cancelWin.show();this.cancelWin.alignTo(document.body,"tl-tl",this.cancelWinOffset);},hideCancelWin:function(){if(this.cancelWin){this.cancelWin.hide();}
if(this.routeCancelWin){this.routeCancelWin.hide();}
if(this.routeUndoWin){this.routeUndoWin.hide();}},loadInvalidRoutePanel:function(status_code){if(!this.invalidRoutePanel){this.invalidRoutePanel=new gwst.widgets.InvalidRoutePanel({status_code:status_code});this.invalidRoutePanel.on('okay-btn',this.finInvalidRouteStep,this);}else{this.invalidRoutePanel.updateText({status_code:status_code});}
this.viewport.setWestPanel(this.invalidRoutePanel);},loadRoundTripWarningWindow:function(){if(!this.roundTripWindow){this.roundTripWindow=new gwst.widgets.RoundTripWindow();this.roundTripWindow.on('cont-route',this.resumeRoute,this);this.roundTripWindow.on('auto-return-route',this.autoPlotReturnRoute,this);this.roundTripWindow.on('okay-route',this.satisfiedRoute,this);}
this.roundTripWindow.show();},loadSatisfiedRoutePanel:function(){if(!this.satisfiedRoutePanel){this.satisfiedRoutePanel=new gwst.widgets.SatisfiedRoutePanel();this.satisfiedRoutePanel.on('cont-route',this.resumeRoute,this);this.satisfiedRoutePanel.on('edit-route',this.startEditRouteStep,this);this.satisfiedRoutePanel.on('redraw-route',this.redrawRoute,this);this.satisfiedRoutePanel.on('save-route',this.completeRoute,this);}
this.viewport.setWestPanel(this.satisfiedRoutePanel);this.satisfiedRoutePanel.manageAuto(this.autoRoundTrip);this.routeCancelWin.hide();this.routeUndoWin.hide();},completeRoute:function(){if(!this.autoRoundTrip){this.mapPanel.lineFinish();}
this.validateShape(this.cur_feature,'route');},redrawRoute:function(){if(!this.autoRoundTrip){this.mapPanel.lineFinish();}
this.mapPanel.removeLastFeature();this.autoRoundTrip=false;this.startDrawInstructStep();},redrawEditRoute:function(){this.disableFeatureEdit();this.mapPanel.removeLastFeature();this.autoRoundTrip=false;this.startDrawInstructStep();},loadEditRoutePanel:function(){if(!this.editRoutePanel){this.editRoutePanel=new gwst.widgets.EditRoutePanel();this.editRoutePanel.on('redraw-edit-route',this.redrawEditRoute,this);this.editRoutePanel.on('save-edit-route',this.finEditRouteStep,this);}
this.viewport.setWestPanel(this.editRoutePanel);},loadActivityAreasPanel:function(){if(!this.actAreasPanel){this.actAreasPanel=new gwst.widgets.ActivityAreasPanel({help_checked:this.help_on});this.actAreasPanel.on('draw-skip',this.skipDrawingStep,this);}
this.viewport.setWestPanel(this.actAreasPanel);this.actAreasPanel.help_box.on('show-help',this.showHelp,this);this.activatePointDraw();},loadSatisfiedActivityPanel:function(){this.mapPanel.disable();if(!this.satisfiedActPanel){this.satisfiedActPanel=new gwst.widgets.SatisfiedActivityPanel();this.satisfiedActPanel.on('edit-act',this.startEditActivityStep,this);this.satisfiedActPanel.on('redraw-act',this.redrawActivity,this);this.satisfiedActPanel.on('save-act',this.completeActivity,this);}
this.viewport.setWestPanel(this.satisfiedActPanel);},completeActivity:function(){this.validateShape(this.cur_feature,'act_point');},redrawActivity:function(){this.mapPanel.removeLastFeature();this.startActivityAreasStep();},redrawEditActivity:function(){this.disableFeatureEdit();this.redrawActivity();},loadActivityQuestionsPanel:function(){if(!this.activityQuestionsPanel){this.activityQuestionsPanel=new gwst.widgets.ActivityQuestionsPanel();this.activityQuestionsPanel.on('activity-questions-cont',this.finActivityInfoStep,this);}
this.viewport.setWestPanel(this.activityQuestionsPanel);},loadFishingQuestionsPanel:function(){if(!this.fishingQuestionsPanel){this.fishingQuestionsPanel=new gwst.widgets.FishingQuestionsPanel();this.fishingQuestionsPanel.on('fishing-questions-cont',this.getFishingAnswers,this);}
this.viewport.setWestPanel(this.fishingQuestionsPanel);},loadViewingQuestionsPanel:function(){if(!this.viewingQuestionsPanel){this.viewingQuestionsPanel=new gwst.widgets.ViewingQuestionsPanel();this.viewingQuestionsPanel.on('viewing-questions-cont',this.getViewingAnswers,this);}
this.viewport.setWestPanel(this.viewingQuestionsPanel);},loadDivingQuestionsPanel:function(){if(!this.divingQuestionsPanel){this.divingQuestionsPanel=new gwst.widgets.DivingQuestionsPanel();this.divingQuestionsPanel.on('diving-questions-cont',this.getDivingAnswers,this);}
this.viewport.setWestPanel(this.divingQuestionsPanel);},loadMoreActivitiesPanel:function(){this.mapPanel.enable()
if(!this.moreActivitiesPanel){this.moreActivitiesPanel=new gwst.widgets.MoreActivitiesPanel();this.moreActivitiesPanel.on('draw-new',this.finMoreActivitiesStep,this);}
this.viewport.setWestPanel(this.moreActivitiesPanel);},loadFinishPanel:function(){if(!this.finishPanel){this.finishPanel=new gwst.widgets.FinishPanel();this.finishPanel.on('finish-cont',this.finFinishedStep,this);}
this.viewport.setWestPanel(this.finishPanel);},enableFeatureEdit:function(){this.mapPanel.modifyFeature(this.cur_feature);},disableFeatureEdit:function(){this.mapPanel.finModifyFeature();},validateShape:function(feature,type){var config={geometry:feature.geometry.toString(),survey_id:gwst.settings.interview_id,type:type}
this.loadWait('Validating your shape');Ext.Ajax.request({url:gwst.settings.urls.shape_validate,method:'POST',disableCachingParam:true,params:config,success:this.finValidateShape,failure:function(response,opts){this.hideWait();gwst.error.load('An error has occurred.  Please try again and notify us if it happens again.');},scope:this});},finValidateShape:function(response,opts){this.hideWait();var res_obj=Ext.decode(response.responseText);var status_code=parseFloat(res_obj.status_code);if(status_code==0){if(res_obj.type=='route'){this.finDrawInstructStep();}else{this.startActivityInfoStep();}}else if(status_code>0){if(res_obj.type=='route'){this.startInvalidRouteStep(status_code);}else{this.startInvalidShapeStep(status_code);}}else{gwst.error.load('An error has occurred while trying to validate your area.  Please try again and notify us if this keeps happening.');}},updateStatus:function(field,val,handler){this.loadWait('Updating');var data={survey_id:gwst.settings.interview_id,field:field,val:val};Ext.Ajax.request({url:gwst.settings.urls.status,method:'POST',disableCachingParam:true,params:{status:Ext.util.JSON.encode(data)},success:handler,failure:function(response,opts){this.hideWait.defer(500,this);gwst.error.load('An error has occurred while trying to update.');},scope:this});},saveNewRoute:function(){this.loadWait('Saving');var data={geometry:this.cur_feature.geometry.toString(),survey_id:gwst.settings.interview_id,type:'route',factors:this.route_factors,other_factor:this.route_factors_other,zoom_level:this.mapPanel.map.getZoom()};Ext.Ajax.request({url:gwst.settings.urls.shapes,method:'POST',disableCachingParam:true,params:{feature:Ext.util.JSON.encode(data)},success:this.finSaveNewRoute,failure:function(response,opts){this.hideWait.defer(500,this);gwst.error.load('An error has occurred while trying to save.');},scope:this});},saveNewPoint:function(){this.loadWait('Saving');var data={geometry:this.cur_feature.geometry.toString(),survey_id:gwst.settings.interview_id,type:'act_point',activities:this.act_list_items,fish_tgts:this.fish_tgts,view_tgts:this.view_tgts,dive_tgts:this.dive_tgts,zoom_level:this.mapPanel.map.getZoom()};Ext.Ajax.request({url:gwst.settings.urls.shapes,method:'POST',disableCachingParam:true,params:{feature:Ext.util.JSON.encode(data)},success:this.finSaveNewActivity,failure:function(response,opts){this.hideWait.defer(500,this);gwst.error.load('An error has occurred while trying to save.');},scope:this});},stopDrawing:function(response){this.updateStatus('complete',true,this.finUpdateCompleteStatus);},finUpdateActStatus:function(response){var new_status=Ext.decode(response.responseText);this.hideWait.defer(500,this);this.updateStatus('complete',true,this.finUpdateCompleteStatus);},finUpdateCompleteStatus:function(response){var new_status=Ext.decode(response.responseText);this.hideWait.defer(500,this);this.startFinishedStep();},finSaveNewRoute:function(response){var new_feat=Ext.decode(response.responseText);this.hideWait.defer(500,this);this.startActivityAreasStep();},finSaveNewActivity:function(response){var new_feat=Ext.decode(response.responseText);this.hideWait.defer(500,this);this.activity_shapes_drawn=true;this.startMoreActivitesStep();},newFeatureHandler:function(feature){this.cur_feature=feature;if(feature.geometry.CLASS_NAME=='OpenLayers.Geometry.LineString'){this.hideCancelWin();}else{if(this.checkZoom()){this.loadSatisfiedActivityPanel();}else{this.cur_feature.destroy();this.mapPanel.enablePointDraw();}}},checkZoom:function(){if(this.mapPanel.map.getZoom()<gwst.settings.minimum_draw_zoom){Ext.Msg.show({title:'Attention required',msg:gwst.settings.zoom_error_text,buttons:Ext.Msg.OK,minWidth:300});return false;}else{return true;}},pauseRoute:function(distance){if(distance<1){this.satisfiedRoute();}else{this.loadRoundTripWarningWindow();}},satisfiedRoute:function(){this.hideCancelWin();this.loadSatisfiedRoutePanel();},resumeRoute:function(){this.mapPanel.lineResume();this.startDrawInstructStep();this.loadRouteCancelWin();this.loadRouteUndoWin();},autoPlotReturnRoute:function(){this.mapPanel.autoCompleteRoute();this.autoRoundTrip=true;this.satisfiedRoute();},mapPanelCreated:function(){this.mapPanel=Ext.getCmp('mappanel');this.mapPanel.on('line-paused',this.pauseRoute,this);this.mapPanel.on('vector-completed',this.newFeatureHandler,this);},zoomToCity:function(city_rec){this.mapPanel.zoomToPoint(city_rec.get('feature'));},zoomToPlacemark:function(place_rec){this.mapPanel.zoomToPoint(place_rec.get('feature'));},enableUnloadWarning:function(){window.onbeforeunload=function confirmBrowseAway(){return"If you leave now your survey will be left unfinished.";}},disableUnloadWarning:function(){window.onbeforeunload=null;},loadAddRouteTooltip:function(){this.loadMapTooltip('Now click on the map where you started your route. Continue clicking and tracing it out. Double-click the last point to finish');},loadDrawAreaTooltip:function(){this.loadMapTooltip('Click on the map to start drawing your area.  Continue clicking and tracing it out. Double-click the last point to finish');},loadMapTooltip:function(text){if(this.mapTip){this.mapTip.hide();this.mapTip.destroy();this.mapTip=null;}
this.mapTip=new Ext.ToolTip({id:'map-tip',target:'mappanel',width:150,trackMouse:true,autoHide:false,html:text,mouseOffset:[25,28],style:'opacity: 0.8; -moz-opacity: 0.8'});},hideMapTooltip:function(){if(this.mapTip){this.mapTip.hide();this.mapTip.destroy();this.mapTip=null;}},loadWait:function(msg){if(!this.wait_win){this.wait_win=new gwst.widgets.WaitWindow();this.wait_win.on('show',(function(){this.wait_win.center();}).createDelegate(this));}
this.wait_win.showMsg(msg);},hideWait:function(){this.wait_win.hide();},createError:function(msg){if(!gwst.error){gwst.error=new gwst.widgets.ErrorWindow();gwst.error.on('show',(function(){gwst.error.center();}).createDelegate(this));}},loadResetMapWin:function(){if(!this.resetMapWin){this.resetMapWin=new gwst.widgets.ResetMapWindow();this.resetMapWin.on('reset-map',this.loadResetCheckWin,this);}
this.resetMapWin.show();this.resetMapWin.alignTo(document.body,"tl-tl",this.resetMapWinOffset);},loadResetCheckWin:function(){if(!this.resetCheckWin){this.resetCheckWin=new gwst.widgets.ResetMapCheckWindow();this.resetCheckWin.on('confirm',this.resetMapView,this);}
this.resetCheckWin.show();},resetMapView:function(){this.mapPanel.resetMapView();if(this.introPanel&&!this.introPanel.hidden){Ext.getCmp('state-radio-group').reset();}}});OpenLayers.Handler.ResumablePath=OpenLayers.Class(OpenLayers.Handler.Path,{EVENT_TYPES:["pause"],initialize:function(control,callbacks,options){this.EVENT_TYPES=OpenLayers.Handler.ResumablePath.prototype.EVENT_TYPES.concat(OpenLayers.Handler.Path.prototype.EVENT_TYPES);OpenLayers.Handler.Path.prototype.initialize.apply(this,arguments);},dblclick:function(evt){this.dbl_click_event=evt;this.pause();return false;},finishPath:function(){if(!this.freehandMode(this.dbl_click_event)){var index=this.line.geometry.components.length-1;this.line.geometry.removeComponent(this.line.geometry.components[index]);this.removePoint();this.finalize();}},CLASS_NAME:"OpenLayers.Handler.ResumablePath"});OpenLayers.Control.BorderPan=OpenLayers.Class(OpenLayers.Control,{onMove:this.onMove,onOut:this.onOut,panBorderWidth:75,maxPxPan:5,panRate:10,panning:false,blackoutBoxes:[],intervalId:null,x:0,y:0,activate:function(){if(OpenLayers.Control.prototype.activate.apply(this,arguments)){this.map.events.register('mousemove',this,this.onMove);this.map.events.register('mouseout',this,this.onOut);this.startInterval();return true;}else{return false;}},deactivate:function(){if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){this.map.events.unregister('mousemove',this,this.onMove);this.map.events.unregister('mouseout',this,this.onOut);this.stopInterval();return true;}else{return false;}},startInterval:function(){var scope=this;this.intervalId=setInterval(function(){if(scope.panning&&(scope.x!=0||scope.y!=0)){scope.map.pan(scope.x,scope.y,{'animate':false,'dragging':false});}},this.panRate);},stopInterval:function(){this.x=0;this.y=0;clearInterval(this.intervalId);},initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,arguments);},onMove:function(evt){this.panPx=this.getPanPx(evt.xy);this.x=parseInt(this.panPx['xPx']);this.y=parseInt(this.panPx['yPx']);if(this.panPx['xPx']!=0||this.panPx['yPx']!=0){this.panning=true;}},getPanPx:function(xy){this.rightBound=this.map.getCurrentSize().w;this.bottomBound=this.map.getCurrentSize().h;this.x=0;this.y=0;this.blackout=false;for(var i=0;i<this.blackoutBoxes.length;i++){if(xy.x>this.blackoutBoxes[i]['left']&&xy.x<=this.blackoutBoxes[i]['right']&&xy.y>this.blackoutBoxes[i]['top']&&xy.y<=this.blackoutBoxes[i]['bottom']){this.blackout=true;continue;}}
if(xy.x<0||xy.y<0||xy.x>this.rightBound||xy.y>this.bottomBound||this.blackout){this.panning=false;}else{if(!(xy.x>this.panBorderWidth&&xy.x<(this.rightBound-this.panBorderWidth))){if(xy.x<this.panBorderWidth){this.x=xy.x-this.panBorderWidth;}else if(xy.x>this.rightBound-this.panBorderWidth){this.x=xy.x-(this.rightBound-this.panBorderWidth);}}
if(!(xy.y>this.panBorderWidth&&xy.y<(this.bottomBound-this.panBorderWidth))){if(xy.y<this.panBorderWidth){this.y=xy.y-this.panBorderWidth;}else if(xy.y>this.bottomBound-this.panBorderWidth){this.y=xy.y-(this.bottomBound-this.panBorderWidth);}}
if(this.maxPxPan!=0&&this.panBorderWidth!=0){if(this.x!=0){this.x=(this.x/this.panBorderWidth)*this.maxPxPan;}
if(this.y!=0){this.y=(this.y/this.panBorderWidth)*this.maxPxPan;}}}
return{'xPx':this.x,'yPx':this.y};},onOut:function(evt){this.rightBound=this.map.getCurrentSize().w;this.bottomBound=this.map.getCurrentSize().h;if(evt.xy.x<0||evt.xy.y<0||evt.xy.x>this.rightBound||evt.xy.y>this.bottomBound){this.panning=false;this.x=0;this.y=0;}},CLASS_NAME:"OpenLayers.Control.BorderPan"});OpenLayers.Layer.GeoWebCache=OpenLayers.Class(OpenLayers.Layer.Grid,{isBaseLayer:true,url:null,gridBounds:null,type:"png",params:null,zoomOffset:0,gridSetId:null,name:"",initialize:function(options){var args=[options.name,options.url,{},options];OpenLayers.Layer.Grid.prototype.initialize.apply(this,args);if(options&&options.params){this.params=OpenLayers.Util.extend({},options.params);}else{this.params=null;}},setMap:function(map){OpenLayers.Layer.Grid.prototype.setMap.apply(this,arguments);if(!this.gridBounds){this.gridBounds=this.maxExtent.clone();}},zeroPad:function(num,len,radix){var str=num.toString(radix||10);while(str.length<len){str="0"+str;}
return str;},getURL:function(bounds){var center=bounds.getCenterLonLat();var res=this.map.getResolution();var x=Math.floor((center.lon-this.gridBounds.left)/(res*this.tileSize.h));var y=Math.floor((center.lat-this.gridBounds.bottom)/(res*this.tileSize.w));var z=this.zoomOffset+this.map.getZoom();var shift=z/2|0;var half=Math.pow(2,shift+1);var digits=1;if(half>10){digits=((Math.log(half)/Math.LN10).toFixed(14)|0)+1;}
var halfX=x/half|0;var halfY=y/half|0;var path=[(this.gridSetId||this.projection.projCode.replace(":","_"))+"_"+this.zeroPad(z,2),this.zeroPad(halfX,digits)+"_"+this.zeroPad(halfY,digits),this.zeroPad(x,2*digits)+"_"+this.zeroPad(y,2*digits)+"."+this.type].join("/");var url=this.url;if(url instanceof Array){url=this.selectUrl(path,url);}
var query="";if(this.params){query="?"+OpenLayers.Util.getParameterString(this.params);}
var base=url.replace(/\/$/,"")+"/";return base+path+query;},addTile:function(bounds,position){return new OpenLayers.Tile.Image(this,position,bounds,null,this.tileSize);},clone:function(obj){if(!obj){var options=OpenLayers.Util.extend({},this.options);obj=new OpenLayers.Layer.GeoWebCache(options);}
return OpenLayers.Layer.Grid.prototype.clone.apply(this,[obj]);},CLASS_NAME:"OpenLayers.Layer.GeoWebCache"});Ext.namespace('gwst','gwst.widgets');gwst.widgets.MainViewport=Ext.extend(Ext.Viewport,{id:'main-viewport',curWestPanel:null,initComponent:function(){Ext.apply(this,{layout:"border",items:[{region:"center",id:"mappanel",border:false,xtype:"gwst-res-draw-map-panel",split:true,listeners:this.mapPanelListeners},{region:'west',width:330,id:'west-panel-container',collapsed:false,layout:'fit',autoScroll:true,border:false,style:'border-right: 1px solid #888888;'},{region:'south',height:24,id:'southpanel',bodyStyle:'background-color: #E6F1FF; font-weight: bold; color: #222222; padding: 3px; border-top: 1px solid #0066ff; border-bottom: 1px solid #0066ff',border:false,html:gwst.settings.help_text}]});gwst.widgets.MainViewport.superclass.initComponent.apply(this,arguments);},onRender:function(){gwst.widgets.MainViewport.superclass.onRender.apply(this,arguments);},setWestPanel:function(panel){var westPanelContainer=Ext.getCmp('west-panel-container');if(this.curWestPanel){this.curWestPanel.hide();}
if(!panel.loaded){westPanelContainer.add(panel);panel.loaded=true;}
this.curWestPanel=panel;this.curWestPanel.show();westPanelContainer.doLayout();(westPanelContainer.body).scroll('top');}});Ext.reg('gwst-main-viewport',gwst.widgets.MainViewport);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ResDrawMapPanel=Ext.extend(GeoExt.MapPanel,{defaultZoom:1,defaultCenter:null,cachedTiles:true,initComponent:function(){var region={e_bound:-7436602.79,n_bound:5611382.66,s_bound:4925283.89,w_bound:-8256007.73,name:'Oregon Coast'};var map_extent=new OpenLayers.Bounds(-20037508,-20037508,20037508,20037508.34);var region_extent=new OpenLayers.Bounds(region.w_bound,region.s_bound,region.e_bound,region.n_bound);this.defaultCenter=region_extent.getCenterLonLat();var map_options={controls:[],projection:new OpenLayers.Projection("EPSG:3857"),displayProjection:new OpenLayers.Projection("EPSG:4326"),units:"m",numZoomLevels:11,maxResolution:2445.9849046875,maxExtent:map_extent,eventListeners:{"zoomend":this.switchChartLayer.createDelegate(this)}};var defaultStyle=new OpenLayers.Style(OpenLayers.Util.applyDefaults({fillColor:"#ffff00",fillOpacity:0.6,strokeColor:"#ff6600",strokeWidth:2},OpenLayers.Feature.Vector.style["default"]));var selectStyle=new OpenLayers.Style(OpenLayers.Util.applyDefaults({fillColor:'blue',fillOpacity:0.4,strokeColor:'blue',strokeWidth:2},OpenLayers.Feature.Vector.style["select"]));var tempStyle=new OpenLayers.Style(OpenLayers.Util.applyDefaults({fillColor:"#ee9900",fillOpacity:0.4,strokeColor:"#ff6600",strokeWidth:2},OpenLayers.Feature.Vector.style["temporary"]));var myStyle=new OpenLayers.StyleMap({'default':defaultStyle,'select':selectStyle,'temporary':tempStyle});var hybridLayer=new OpenLayers.Layer.Google("Satellite",{type:google.maps.MapTypeId.HYBRID,sphericalMercator:true,isBaseLayer:true,minZoomLevel:6});var roadMapLayer=new OpenLayers.Layer.Google("Road Map",{type:google.maps.MapTypeId.ROADMAP,sphericalMercator:true,isBaseLayer:true,minZoomLevel:6});this.nautLayer=new OpenLayers.Layer.TMS("Nautical Charts",["http://c3429629.r29.cf0.rackcdn.com/stache/NETiles_layer/"],{buffer:1,'isBaseLayer':true,'sphericalMercator':true,getURL:function(bounds){var z=map.getZoom();var url=this.url;var path='blank.png';if(z<=17&&z>=0){var res=map.getResolution();var x=Math.round((bounds.left-this.maxExtent.left)/(res*this.tileSize.w));var y=Math.round((this.maxExtent.top-bounds.top)/(res*this.tileSize.h));var limit=Math.pow(2,z);var path=(z+6)+"/"+x+"/"+y+".png";}
tilepath=url+path;return url+path;}});this.naut2Layer=new OpenLayers.Layer.WMS("Nautical Charts","http://egisws02.nos.noaa.gov/ArcGIS/services/RNC/NOAA_RNC/ImageServer/WMSServer",{layers:'null'});this.vectorLayer=new OpenLayers.Layer.Vector("Vector Layer",{displayInLayerSwitcher:false,styleMap:myStyle});this.vectorLayer.events.on({"sketchstarted":this.vecStarted,"sketchmodified":this.vecModified,"sketchcomplete":this.vecComplete,scope:this});Ext.DomHelper.append(document.body,[{id:'the-map',tag:'div'}]);map=new OpenLayers.Map('the-map',map_options);map.addControl(new OpenLayers.Control.Navigation({handleRightClicks:true}));map.addControl(new OpenLayers.Control.PanZoomBar());map.addControl(new OpenLayers.Control.MousePosition());var layerSwitcher=new OpenLayers.Control.LayerSwitcher();map.addControl(layerSwitcher);layerSwitcher.baseLbl.innerHTML="Maps";map.addControl(new OpenLayers.Control.ScaleLine());layerSwitcher.maximizeControl();map.addControl(new OpenLayers.Control.KeyboardDefaults());this.borderPanControl=new OpenLayers.Control.BorderPan({'blackoutBoxes':[{'top':8,'left':8,'right':215,'bottom':275}],panBorderWidth:60});map.addControl(this.borderPanControl);this.drawLineControl=new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.ResumablePath);this.drawLineControl.handler.pause=this.linePaused.createDelegate(this);map.addControl(this.drawLineControl);this.drawPointControl=new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Point);map.addControl(this.drawPointControl);this.modifyControl=new OpenLayers.Control.ModifyFeature(this.vectorLayer);map.addControl(this.modifyControl);this.drawPolyControl=new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Polygon);map.addControl(this.drawPolyControl);Ext.apply(this,{map:map,layers:[this.nautLayer,hybridLayer,roadMapLayer,this.vectorLayer],extent:map_extent,center:region_extent.getCenterLonLat(),zoom:this.defaultZoom,cls:'tip-target'});gwst.widgets.ResDrawMapPanel.superclass.initComponent.call(this);},linePaused:function(){this.getEl().mask();this.lineComps=this.drawLineControl.handler.line.geometry.components;this.tripDistance=this.lineComps[0].distanceTo(this.lineComps[this.lineComps.length-1]);this.milesDistance=this.tripDistance*0.000621371192;this.borderPanControl.stopInterval();this.fireEvent('line-paused',this.milesDistance);},lineResume:function(){this.getEl().unmask();this.borderPanControl.startInterval();},lineFinish:function(){this.getEl().unmask();this.drawLineControl.handler.finishPath();},autoCompleteRoute:function(){this.getEl().unmask();this.cur_line=this.drawLineControl.handler.line.geometry;this.lineComps=this.cur_line.components;this.i=this.lineComps.length-1;for(var j=0;j<=this.i;j++){this.cur_line.addComponent(this.lineComps[this.i-j],this.i+j);}
this.drawLineControl.handler.finishPath();},vecStarted:function(evt){this.fireEvent('vector-started',evt);},vecModified:function(evt){this.fireEvent('vector-modified',evt);},vecComplete:function(evt){this.curFeature=evt.feature;this.disableLineDraw();this.disablePointDraw();this.fireEvent('vector-completed',evt.feature);},modifyFeature:function(feature){this.modifyControl.activate();this.modifyControl.selectControl.select(feature);},finModifyFeature:function(){this.modifyControl.deactivate();},removeLastFeature:function(){this.vectorLayer.removeFeatures([this.curFeature]);},enableLineDraw:function(){this.drawLineControl.activate();this.borderPanControl.activate();},disableLineDraw:function(){this.drawLineControl.deactivate();this.borderPanControl.deactivate();},enablePointDraw:function(){this.drawPointControl.activate();this.borderPanControl.activate();},disablePointDraw:function(){this.drawPointControl.deactivate();this.borderPanControl.deactivate();},cancelPoly:function(){this.disablePolyDraw();this.enablePolyDraw();},cancelLine:function(){this.disableLineDraw();this.enableLineDraw();},undoLine:function(){this.drawLineControl.handler.undo();},resetMapView:function(){this.map.setCenter(this.defaultCenter);this.map.zoomTo(this.defaultZoom);},switchChartLayer:function(){if(map.getZoom()>8&&this.cachedTiles==true&&map.baseLayer==this.nautLayer){map.addLayer(this.naut2Layer);map.raiseLayer(this.naut2Layer,0-(map.layers.length-1))
map.setBaseLayer(this.naut2Layer);map.removeLayer(this.nautLayer);this.cachedTiles=false;}else if(map.getZoom()<9&&this.cachedTiles==false&&map.baseLayer==this.naut2Layer){map.addLayer(this.nautLayer);map.raiseLayer(this.nautLayer,0-(map.layers.length-1))
map.setBaseLayer(this.nautLayer);map.removeLayer(this.naut2Layer);this.cachedTiles=true;}}});Ext.reg('gwst-res-draw-map-panel',gwst.widgets.ResDrawMapPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.WestPanel=Ext.extend(Ext.Panel,{cls:'west-panel',initComponent:function(){Ext.apply(this,{autoScroll:true,border:false});gwst.widgets.WestPanel.superclass.initComponent.call(this);}});Ext.reg('gwst-west-panel',gwst.widgets.WestPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.IntroPanel=Ext.extend(gwst.widgets.WestPanel,{id:'into-panel',resource:'unknown',shape_name:'unknown',user_group:'unknown',help_url:gwst.settings.urls.nav_help,help_checked:false,initComponent:function(){this.addEvents('intro-cont');this.addEvents('intro-back');this.addEvents('show-help');gwst.widgets.IntroPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h2>Step 1: Zoom to Boating Area</h2><p><b>Zoom in on the map to where you started your last trip.</b></p><p><b>A: Select the state where you departed:</b></p>';return html_text;},onRender:function(){this.header_panel=new Ext.Panel({id:'intro_header_panel',html:'<img src="/media/img/h_01_map_introduction.png">',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'intro_inner_panel',style:'margin: 10px 10px 0px 10px',border:false});this.state_radio_group=new Ext.form.RadioGroup({id:'state-radio-group',xtype:'radiogroup',itemCls:'x-radio-group',width:250,columns:2,items:[{boxLabel:'Maine',name:'state',inputValue:'maine'},{boxLabel:'New Hampshire',name:'state',inputValue:'new-hampshire'},{boxLabel:'Massachusetts',name:'state',inputValue:'massachusetts'},{boxLabel:'Rhode Island',name:'state',inputValue:'rhode-island'},{boxLabel:'Connecticut',name:'state',inputValue:'connecticut'},{boxLabel:'New York',name:'state',inputValue:'new-york'},{boxLabel:'New Jersey',name:'state',inputValue:'new-jersey'}]});this.state_radio_group.on('change',this.stateChanged,this);this.state_radio_panel=new Ext.Panel({border:false,keys:[{key:[Ext.EventObject.UP,Ext.EventObject.DOWN,Ext.EventObject.LEFT,Ext.EventObject.RIGHT],handler:function(keyCode,event){event.preventDefault();}}],items:[this.state_radio_group]});this.lower_panel=new Ext.Panel({border:false,style:'margin-left: 5px; margin-right:5px; padding-left: 5px; padding-right: 5px',defaults:{bodyStyle:'border: none; padding: 5px 5px 5px 10px'},id:'intro_lower_panel',html:'<p><b>B: Continue zooming in:</b></p><table><tr><td><img style="width:39px; height:52px" src="/media/img/nav_arrows.png" /></td><td><p><b>Move Map - </b>Click the buttons on the upper left of the map, click & drag with your mouse, or use your keyboard arrows.</p></td></tr></table><table><tr><td><img style="width:39px; height:52px" src="/media/img/nav_zoombar.png" /></td><td><p><b>Zoom Map - </b>Click the \'+\' and \'-\' buttons on the upper left of the map or use the scroll wheel on your mouse if you have one.</p></td></tr></table>'});this.help_box=new Ext.form.Checkbox({boxLabel:'Show help',fieldLabel:'(f)Show help',checked:this.help_checked,handler:this.helpCheck,id:'intro-help-checkbox',name:'introHelpCheckbox'});this.demo_panel=new Ext.Panel({html:'<div class="video-link"><img class="video-img" src="/media/img/film_go.png"/> <a href="'+gwst.settings.urls.demo+'" target="_blank">Watch Demonstration</a></div>',id:'intro_demo_panel',height:30,width:120,border:false});this.help_panel=new Ext.Panel({cls:'help-panel',layout:{type:'hbox',defaultMargins:{left:10,top:3,right:10,bottom:3}},title:'Having trouble?',border:true});this.help_panel.add(this.help_box);this.help_panel.add(this.demo_panel);this.button_panel=new gwst.widgets.TwoButtonPanel({btn2_text:'Start Plotting',btn2_handler:this.contBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.state_radio_panel);this.add(this.lower_panel);this.add(this.button_panel);this.add(this.help_panel);gwst.widgets.IntroPanel.superclass.onRender.apply(this,arguments);},stateChanged:function(radioGroup,state){if(!this.state_center){this.state_center=new OpenLayers.LonLat(0,0);this.state_zoom=2;}
if(state){if(state.boxLabel=="New York"){this.state_center.lon=-8127000;this.state_center.lat=4989000;this.state_zoom=3;}else if(state.boxLabel=="New Jersey"){this.state_center.lon=-8210000;this.state_center.lat=4945000;this.state_zoom=3;}else if(state.boxLabel=="Connecticut"){this.state_center.lon=-8100000;this.state_center.lat=5044000;this.state_zoom=3;}else if(state.boxLabel=="Rhode Island"){this.state_center.lon=-7956000;this.state_center.lat=5080000;this.state_zoom=4;}else if(state.boxLabel=="Massachusetts"){this.state_center.lon=-7870000;this.state_center.lat=5170000;this.state_zoom=3;}else if(state.boxLabel=="New Hampshire"){this.state_center.lon=-7877000;this.state_center.lat=5312000;this.state_zoom=5;}else if(state.boxLabel=="Maine"){this.state_center.lon=-7733000;this.state_center.lat=5423000;this.state_zoom=3;}
map.setCenter(this.state_center);map.zoomTo(this.state_zoom);}},skipClicked:function(){this.fireEvent('intro-skip',this);},contBtnClicked:function(){this.fireEvent('intro-cont',this,this.resource);},helpCheck:function(){this.fireEvent('show-help',this.checked);}});Ext.reg('gwst-intro-panel',gwst.widgets.IntroPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.PlotRoutePanel=Ext.extend(gwst.widgets.WestPanel,{id:'plot-route-panel',help_checked:false,help_url:gwst.settings.urls.draw_help,initComponent:function(){this.addEvents('show-help');gwst.widgets.PlotRoutePanel.superclass.initComponent.apply(this,arguments);},getHtmlText:function(){var html_text='<h2>Step 2: Plot your route on the map</h2><p style="padding-bottom:3px">Please remember to plot a complete route, including your return leg even if you came back the same way.</p><ul><li type="disc">Click on your departure point to begin plotting route.</li><li type="disc">Click once for each turn (or waypoint) and double-click to finish plotting your route.</li></ul>';return html_text;},onRender:function(){this.header_panel=new Ext.Panel({id:'draw_instruct_header_panel',html:'<img src="/media/img/h_02_plot_route.png">',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'draw_inner_panel',style:'margin: 10px 10px 0px 5px',border:false});this.panel_three=new Ext.Panel({html:"<p>Don't worry if you make a mistake. You will be able to redraw and/or undo your last point using the blue buttons on the top left of the map. You will also be able to edit or restart your route after you finish it.</p>",border:false,style:'margin: 0 10px 0px 5px'});this.help_img=new Ext.Panel({html:'<img style="margin-left:auto; margin-right:auto" src="/media/img/route_click.gif" id="route_help" />',border:false,bodyStyle:'text-align: center',style:'margin-bottom: 8px'});this.help_box=new Ext.form.Checkbox({boxLabel:'Show help',fieldLabel:'(f)Show help',checked:this.help_checked,handler:this.helpCheck,id:'route-help-checkbox',name:'routeHelpCheckbox'});this.demo_panel=new Ext.Panel({html:'<div class="video-link"><img class="video-img" src="/media/img/film_go.png"/> <a href="'+gwst.settings.urls.demo+'" target="_blank">Watch Demonstration</a></div>',id:'draw_demo_panel',height:30,width:120,border:false});this.help_panel=new Ext.Panel({cls:'help-panel',layout:{type:'hbox',defaultMargins:{left:10,top:3,right:10,bottom:3}},title:'Having trouble?',border:true});this.help_panel.add(this.help_box);this.help_panel.add(this.demo_panel);this.add(this.header_panel);this.add(this.inner_panel);this.add(this.help_img);this.add(this.panel_three);this.add(this.help_panel);setInterval(function(){var img=document.getElementById("route_help"),src=img.getAttribute("src");img.setAttribute("src",src);},20000);gwst.widgets.PlotRoutePanel.superclass.onRender.apply(this,arguments);},helpCheck:function(){this.fireEvent('show-help',this.checked);}});Ext.reg('gwst-plot-route-panel',gwst.widgets.PlotRoutePanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.SatisfiedRoutePanel=Ext.extend(gwst.widgets.WestPanel,{id:'satisfied-route-panel',initComponent:function(){this.addEvents('cont-route');this.addEvents('redraw-route');this.addEvents('save-route');gwst.widgets.SatisfiedRoutePanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h3>Are you satisfied with this route?</h3>';return html_text;},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'satisfied_shape_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.CustomButtons({col_width:250,num_cols:1,element_list:[{elem:this.contClicked.createDelegate(this),type:'handler'},{elem:'No, continue plotting route',type:'text'},{elem:this.editClicked.createDelegate(this),type:'handler'},{elem:'No, edit route',type:'text'},{elem:this.redrawClicked.createDelegate(this),type:'handler'},{elem:'No, re-plot route',type:'text'},{elem:this.saveClicked.createDelegate(this),type:'handler'},{elem:'Yes, save route',type:'text'}]});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.SatisfiedRoutePanel.superclass.onRender.apply(this,arguments);},contClicked:function(){this.fireEvent('cont-route',this);},editClicked:function(){this.fireEvent('edit-route',this);},redrawClicked:function(){this.fireEvent('redraw-route',this);},saveClicked:function(){this.fireEvent('save-route',this);},manageAuto:function(completed){if(completed){this.button_panel.items.get(0).items.get(0).disable();}else{this.button_panel.items.get(0).items.get(0).enable();}}});Ext.reg('gwst-satisfied-route-panel',gwst.widgets.SatisfiedRoutePanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ActivityAreasPanel=Ext.extend(gwst.widgets.WestPanel,{id:'draw-panel',help_url:gwst.settings.urls.draw_act_help,initComponent:function(){this.addEvents('show-help');gwst.widgets.ActivityAreasPanel.superclass.initComponent.apply(this,arguments);},getHtmlText:function(){var html_text='<h2>Step 3: Plot activities from your trip</h2><p>Click on the map to place a marker near where you participated in an activity while boating.</p><p style="padding-bottom: 0; margin-bottom: 0;">While we are interested in any activities you engaged in, we are particularly interested in:</p><ul class="instructions"><li>Fishing</li><li>Wildlife viewing (whales, birds, etc.)</li><li>SCUBA Diving</li><li>Swimming</li><li>Relaxing at anchor</li></ul>';return html_text;},onRender:function(){this.header_panel=new Ext.Panel({id:'draw_header_panel',html:'<img src="/media/img/h_04_activity_areas.png">',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'draw_inner_panel',style:'margin: 10px 10px 0px 10px',border:false});this.panel_three=new Ext.Panel({html:'<p>Don\'t worry if you make a mistake. You will have the chance to re-plot your point after you finish it</p>',border:false,style:'padding:5px 5px 5px 10px'});this.demo_panel=new Ext.Panel({html:'<div class="video-link"><img class="video-img" src="/media/img/film_go.png"/> <a href="'+gwst.settings.urls.demo+'" target="_blank">Watch Demonstration</a></div>',id:'area_demo_panel',height:30,width:120,border:false});this.help_box=new Ext.form.Checkbox({boxLabel:'Show help',fieldLabel:'(f)Show help',checked:this.help_checked,handler:this.helpCheck,id:'act-help-checkbox',name:'actHelpCheckbox'});this.help_panel=new Ext.Panel({cls:'help-panel',layout:{type:'hbox',defaultMargins:{left:10,top:3,right:10,bottom:3}},title:'Having trouble?',border:true});this.button_panel=new gwst.widgets.TwoButtonPanel({btn2_text:'Skip this step',btn2_handler:this.skipStepClicked.createDelegate(this)});this.help_panel.add(this.help_box);this.help_panel.add(this.demo_panel);this.add(this.header_panel);this.add(this.inner_panel);this.add(this.panel_three);this.add(this.button_panel);this.add(this.help_panel);gwst.widgets.ActivityAreasPanel.superclass.onRender.apply(this,arguments);},skipStepClicked:function(){this.fireEvent('draw-skip',this);},helpCheck:function(){this.fireEvent('show-help',this.checked);}});Ext.reg('gwst-act-areas-panel',gwst.widgets.ActivityAreasPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.SatisfiedActivityPanel=Ext.extend(gwst.widgets.WestPanel,{id:'satisfied-activity-panel',initComponent:function(){this.addEvents('redraw-activity');this.addEvents('save-activity');gwst.widgets.SatisfiedActivityPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h3>Are you satisfied with this point?</h3>';return html_text;},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'satisfied_shape_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.CustomButtons({col_width:250,num_cols:1,element_list:[{elem:this.redrawClicked.createDelegate(this),type:'handler'},{elem:'No, re-plot activity point',type:'text'},{elem:this.saveClicked.createDelegate(this),type:'handler'},{elem:'Yes, save activity point',type:'text'}]});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.SatisfiedActivityPanel.superclass.onRender.apply(this,arguments);},editClicked:function(){this.fireEvent('edit-act',this);},redrawClicked:function(){this.fireEvent('redraw-act',this);},saveClicked:function(){this.fireEvent('save-act',this);}});Ext.reg('gwst-satisfied-activity-panel',gwst.widgets.SatisfiedActivityPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ActivityQuestionsPanel=Ext.extend(gwst.widgets.WestPanel,{initComponent:function(){gwst.widgets.ActivityQuestionsPanel.superclass.initComponent.apply(this,arguments);},onRender:function(){this.header_panel=new Ext.Panel({id:'activity_questions_header_panel',height:54,html:'<img src="/media/img/h_05_activity_questions.png">',border:'north',bodyCfg:{cls:'action-panel-header'}});this.question_one=new Ext.Panel({html:'<p>In this area, did you engage in any of the following activities (<i>please check all that apply</i>)?</p>',style:'margin: 10px 10px 10px 0px',border:false});this.fishing_box=new Ext.form.Checkbox({boxLabel:'Fishing',name:'fishing'});this.viewing_box=new Ext.form.Checkbox({boxLabel:'Wildlife viewing',name:'wildlife-viewing'});this.diving_box=new Ext.form.Checkbox({boxLabel:'SCUBA Diving',name:'diving'});this.other_box=new Ext.form.Checkbox({boxLabel:'Other',name:'other',id:'other-activity-box'});this.other_box.on('check',this.otherChecked,this);this.answer_one=new Ext.form.CheckboxGroup({id:'activity-answerOne',xtype:'checkboxgroup',fieldLabel:'Reasons List',itemCls:'x-check-group-alt',style:'margin: 0px 0px 10px 15px',columns:1,items:[this.fishing_box,this.viewing_box,this.diving_box,{boxLabel:'Swimming',name:'swimming'},{boxLabel:'Relaxing at anchor',name:'relaxing'},this.other_box]});this.other_text_one=new Ext.Panel({html:'If \'other\' please specify:',style:'margin: 0px 0px 10px 10px',border:false});this.other_one=new Ext.form.TextField({id:'other-activity',style:'margin: 0px 0px 10px 10px',width:'250px',maxLength:150,maxLengthText:'Your entry is too long'});this.other_one_panel=new Ext.Panel({border:false,keys:[{key:[Ext.EventObject.UP,Ext.EventObject.DOWN,Ext.EventObject.LEFT,Ext.EventObject.RIGHT],handler:function(keyCode,event){event.stopPropagation();}}],items:[this.other_one]});this.button_panel=new gwst.widgets.TwoButtonPanel({btn2_text:'Continue >>',btn2_handler:this.contBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.question_one);this.add(this.answer_one);this.add(this.other_text_one);this.other_text_one.hide();this.add(this.other_one_panel);this.other_one_panel.hide();this.add(this.button_panel);gwst.widgets.ActivityQuestionsPanel.superclass.onRender.apply(this,arguments);},otherChecked:function(){if(Ext.getCmp('other-activity-box').checked){this.other_text_one.show();this.other_one_panel.show();}else{this.other_text_one.hide();this.other_one_panel.hide();}},contBtnClicked:function(){if(this.other_one.isValid()){this.fireEvent('activity-questions-cont',this);}else{Ext.Msg.show({title:'Alert',msg:'<p class="help-win">Your entry for \'other\' is too long.  Please shorten it.</p>',buttons:Ext.Msg.OK,minWidth:300});}},resetPanel:function(){this.answer_one.reset();this.other_one.reset();this.other_text_one.hide();this.other_one_panel.hide();}});Ext.reg('gwst-activity-questions-panel',gwst.widgets.ActivityQuestionsPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.FishingQuestionsPanel=Ext.extend(gwst.widgets.WestPanel,{initComponent:function(){gwst.widgets.FishingQuestionsPanel.superclass.initComponent.apply(this,arguments);},onRender:function(){this.header_panel=new Ext.Panel({id:'fishing_questions_header_panel',html:'<img src="/media/img/h_05_activity_questions.png">',border:'north',bodyCfg:{cls:'action-panel-header'}});this.fishing_text_one=new Ext.Panel({html:'<p>What fish did you target?</p>',border:false});this.fish_other_box=new Ext.form.Checkbox({boxLabel:'Other',name:'fish-other',id:'other-fish-species-box'});this.fish_other_box.on('check',this.fishOtherChecked,this);this.fishing_one=new Ext.form.CheckboxGroup({id:'fishing-activity-1',xtype:'checkboxgroup',fieldlabel:'Fishing Species',itemCls:'x-check-group-alt',style:'margin: 0px 0px 10px 15px',columns:2,items:[{boxLabel:'Striped Bass',name:'striped-bass'},{boxLabel:'Bluefish',name:'bluefish'},{boxLabel:'Flounder',name:'flounder'},{boxLabel:'Atlantic Cod',name:'cod'},{boxLabel:'Haddock',name:'haddock'},{boxLabel:'Atlantic Mackerel',name:'mackerel'},{boxLabel:'Scup (Porgy)',name:'scup'},{boxLabel:'Tautog (Blackfish)',name:'tautog'},{boxLabel:'Tuna',name:'tuna'},{boxLabel:'Shark',name:'shark'},{boxLabel:'Billfish',name:'billfish'},{boxLabel:'Wahoo',name:'wahoo'},this.fish_other_box]});this.other_text_fish=new Ext.Panel({html:'If \'other\' please specify:',style:'margin: 0px 0px 10px 10px',border:false});this.other_fish=new Ext.form.TextField({id:'other-fish',style:'margin: 0px 0px 10px 10px',width:'250px',maxLength:150,maxLengthText:'Your entry is too long'});this.other_fish_panel=new Ext.Panel({border:false,keys:[{key:[Ext.EventObject.UP,Ext.EventObject.DOWN,Ext.EventObject.LEFT,Ext.EventObject.RIGHT],handler:function(keyCode,event){event.stopPropagation();}}],items:[this.other_fish]});this.button_panel=new gwst.widgets.TwoButtonPanel({btn2_text:'Continue >>',btn2_handler:this.contBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.fishing_text_one);this.add(this.fishing_one);this.add(this.other_text_fish);this.other_text_fish.hide();this.add(this.other_fish_panel);this.other_fish_panel.hide();this.add(this.button_panel);gwst.widgets.FishingQuestionsPanel.superclass.onRender.apply(this,arguments);},fishOtherChecked:function(){if(Ext.getCmp('other-fish-species-box').checked){this.other_text_fish.show();this.other_fish_panel.show();}else{this.other_text_fish.hide();this.other_fish_panel.hide();}},contBtnClicked:function(){if(this.fishing_one.isValid()&&this.other_fish.isValid()){this.fireEvent('fishing-questions-cont',this);}else{Ext.Msg.show({title:'Alert',msg:'<p class="help-win">Your entry for \'other\' is too long.  Please shorten it.</p>',buttons:Ext.Msg.OK,minWidth:300});}},resetPanel:function(){this.fishing_one.reset();this.other_fish.reset();this.other_text_fish.hide();this.other_fish_panel.hide();}});Ext.reg('gwst-fishing-questions-panel',gwst.widgets.FishingQuestionsPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ViewingQuestionsPanel=Ext.extend(gwst.widgets.WestPanel,{initComponent:function(){gwst.widgets.ViewingQuestionsPanel.superclass.initComponent.apply(this,arguments);},onRender:function(){this.header_panel=new Ext.Panel({id:'viewing_questions_header_panel',html:'<img src="/media/img/h_05_activity_questions.png">',border:'north',bodyCfg:{cls:'action-panel-header'}});this.viewing_text_one=new Ext.Panel({html:'<p>What animals did you view?</p>',border:false});this.view_other_box=new Ext.form.Checkbox({boxLabel:'Other',name:'view-other',id:'other-view-species-box'});this.view_other_box.on('check',this.viewOtherChecked,this);this.viewing_one=new Ext.form.CheckboxGroup({id:'viewing-activity-1',xtype:'checkboxgroup',fieldlabel:'Viewing Species',itemCls:'x-check-group-alt',style:'margin: 0px 0px 10px 15px',columns:1,items:[{boxLabel:'Whales',name:'whales'},{boxLabel:'Birds',name:'birds'},{boxLabel:'Seals',name:'seals'},{boxLabel:'Dolphins/Porpoises',name:'dolphin-porpoises'},{boxLabel:'Sea Turtles',name:'sea-turtles'},this.view_other_box]});this.other_text_view=new Ext.Panel({html:'If \'other\' please specify:',style:'margin: 0px 0px 10px 10px',border:false});this.other_view=new Ext.form.TextField({id:'other-view',style:'margin: 0px 0px 10px 10px',width:'250px',maxLength:150,maxLengthText:'Your entry is too long'});this.other_view_panel=new Ext.Panel({border:false,keys:[{key:[Ext.EventObject.UP,Ext.EventObject.DOWN,Ext.EventObject.LEFT,Ext.EventObject.RIGHT],handler:function(keyCode,event){event.stopPropagation();}}],items:[this.other_view]});this.button_panel=new gwst.widgets.TwoButtonPanel({btn2_text:'Continue >>',btn2_handler:this.contBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.viewing_text_one);this.add(this.viewing_one);this.add(this.other_text_view);this.other_text_view.hide();this.add(this.other_view_panel);this.other_view_panel.hide();this.add(this.button_panel);gwst.widgets.ViewingQuestionsPanel.superclass.onRender.apply(this,arguments);},viewOtherChecked:function(){if(Ext.getCmp('other-view-species-box').checked){this.other_text_view.show();this.other_view_panel.show();}else{this.other_text_view.hide();this.other_view_panel.hide();}},contBtnClicked:function(){if(this.viewing_one.isValid()&&this.other_view.isValid()){this.fireEvent('viewing-questions-cont',this);}else{Ext.Msg.show({title:'Alert',msg:'<p class="help-win">Your entry for \'other\' is too long.  Please shorten it.</p>',buttons:Ext.Msg.OK,minWidth:300});}},resetPanel:function(){this.viewing_one.reset();this.other_view.reset();this.other_text_view.hide();this.other_view_panel.hide();}});Ext.reg('gwst-viewing-questions-panel',gwst.widgets.ViewingQuestionsPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.DivingQuestionsPanel=Ext.extend(gwst.widgets.WestPanel,{initComponent:function(){gwst.widgets.DivingQuestionsPanel.superclass.initComponent.apply(this,arguments);},onRender:function(){this.header_panel=new Ext.Panel({id:'diving_questions_header_panel',html:'<img src="/media/img/h_05_activity_questions.png">',border:'north',bodyCfg:{cls:'action-panel-header'}});this.diving_text_one=new Ext.Panel({html:'<p>What type of SCUBA diving did you do?</p>',border:false});this.dive_other_box=new Ext.form.Checkbox({boxLabel:'Other',name:'dive-other',id:'other-dive-type-box'});this.dive_other_box.on('check',this.diveOtherChecked,this);this.diving_one=new Ext.form.CheckboxGroup({id:'diving-activity-1',xtype:'checkboxgroup',fieldlabel:'Diving Types',itemCls:'x-check-group-alt',style:'margin: 0px 0px 10px 15px',columns:1,items:[{boxLabel:'Fishing',name:'fishing'},{boxLabel:'Wreck diving',name:'wrecks'},{boxLabel:'Just exploring',name:'exploring'},this.dive_other_box]});this.other_text_dive=new Ext.Panel({html:'If \'other\' please specify:',style:'margin: 0px 0px 10px 10px',border:false});this.other_dive=new Ext.form.TextField({id:'other-dive',style:'margin: 0px 0px 10px 10px',width:'250px',maxLength:150,maxLengthText:'Your entry is too long'});this.other_dive_panel=new Ext.Panel({border:false,keys:[{key:[Ext.EventObject.UP,Ext.EventObject.DOWN,Ext.EventObject.LEFT,Ext.EventObject.RIGHT],handler:function(keyCode,event){event.stopPropagation();}}],items:[this.other_dive]});this.button_panel=new gwst.widgets.TwoButtonPanel({btn2_text:'Continue >>',btn2_handler:this.contBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.diving_text_one);this.add(this.diving_one);this.add(this.other_text_dive);this.other_text_dive.hide();this.add(this.other_dive_panel);this.other_dive_panel.hide();this.add(this.button_panel);gwst.widgets.DivingQuestionsPanel.superclass.onRender.apply(this,arguments);},diveOtherChecked:function(){if(Ext.getCmp('other-dive-type-box').checked){this.other_text_dive.show();this.other_dive_panel.show();}else{this.other_text_dive.hide();this.other_dive_panel.hide();}},contBtnClicked:function(){if(this.diving_one.isValid()&&this.other_dive.isValid()){this.fireEvent('diving-questions-cont',this);}else{Ext.Msg.show({title:'Alert',msg:'<p class="help-win">Your entry for \'other\' is too long.  Please shorten it.</p>',buttons:Ext.Msg.OK,minWidth:300});}},resetPanel:function(){this.diving_one.reset();this.other_dive.reset();this.other_text_dive.hide();this.other_dive_panel.hide();}});Ext.reg('gwst-diving-questions-panel',gwst.widgets.DivingQuestionsPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.MoreActivitiesPanel=Ext.extend(gwst.widgets.WestPanel,{id:'more-activities-panel',resource:'unknown',shape_name:'unknown',initComponent:function(){this.addEvents('draw-new');gwst.widgets.MoreActivitiesPanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h3>Would you like to plot more activities?</h3>';return html_text;},onRender:function(){this.header_panel=new Ext.Panel({id:'more_activities_header_panel',html:'<img src="/media/img/h_06_more_activities.png">',border:'north',height:54,bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'draw_new_area_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.YesNoButtons({yes_handler:this.yesClicked.createDelegate(this),no_handler:this.noClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.MoreActivitiesPanel.superclass.onRender.apply(this,arguments);},yesClicked:function(){this.fireEvent('draw-new',{draw_new:true});},noClicked:function(){this.fireEvent('draw-new',{draw_new:false});}});Ext.reg('gwst-more-activities-panel',gwst.widgets.MoreActivitiesPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.AddPolyWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('add-marker-clicked');Ext.apply(this,{height:25,width:149,layout:'fit',html:'blort',resizable:false,closable:false,collapsible:false,draggable:false,tbar:[{text:'Draw New Area',iconCls:'poly-icon',handler:this.addClicked,scope:this}]});gwst.widgets.AddPolyWindow.superclass.initComponent.call(this);},addClicked:function(){this.fireEvent('draw-poly-clicked');}});Ext.reg('gwst-add-poly-window',gwst.widgets.AddPolyWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.CancelWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('cancel-vector');Ext.apply(this,{height:25,width:100,layout:'fit',html:'blort',resizable:false,closable:false,collapsible:false,draggable:false,tbar:[{text:'Redraw',iconCls:'redraw-icon',handler:this.cancelShape,scope:this}]});gwst.widgets.CancelWindow.superclass.initComponent.call(this);},cancelShape:function(){this.fireEvent('cancel-clicked');}});Ext.reg('gwst-cancel-window',gwst.widgets.CancelWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.CustomButtons=Ext.extend(Ext.Panel,{element_list:[],col_width:150,num_cols:2,initComponent:function(){Ext.apply(this,{style:'margin: 15px; padding: 5px',cls:'gwst-button-panel',layout:'table',border:false,defaults:{bodyStyle:'border: none; padding: 5px'},layoutConfig:{columns:this.num_cols}});gwst.widgets.CustomButtons.superclass.initComponent.apply(this,arguments);},onRender:function(){var btn_action=null;var col_no=1;for(var i=0;i<this.element_list.length;i++){if(this.element_list[i].type=='handler'){if((this.num_cols%2==0)&&(this.element_list[i+2])&&(this.element_list[i+2].type=='handler')&&(col_no%this.num_cols==1)){btn_action=new Ext.Action({text:this.element_list[i+1].elem,handler:this.element_list[i].elem,cls:'custom-left-button'});}else{btn_action=new Ext.Action({text:this.element_list[i+1].elem,handler:this.element_list[i].elem});}
this.add({items:[new Ext.Button(btn_action)],width:this.col_width});i++;}else if(this.element_list[i].type=='text'){this.add({html:this.element_list[i].elem})}
col_no++;};gwst.widgets.CustomButtons.superclass.onRender.apply(this,arguments);}});Ext.reg('gwst-custom-buttons-panel',gwst.widgets.CustomButtons);Ext.namespace('gwst','gwst.widgets');gwst.widgets.EditRoutePanel=Ext.extend(gwst.widgets.WestPanel,{id:'edit-route-panel',initComponent:function(){this.addEvents('redraw-edit-route');this.addEvents('save-edit-route');gwst.widgets.EditRoutePanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h2>Instructions</h2> <p>Edit your boat route by adding, moving, or removing points along its path.</p><h2>How?</h2>';return html_text;},onRender:function(){this.header_panel=new Ext.Panel({id:'edit_route_header_panel',html:'<img src="/media/img/h_02_plot_route.png">',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'edit_shape_inner_panel',style:'margin: 10px 10px 0px 10px',border:false});this.table_panel=new Ext.Panel({layout:'table',border:false,style:'margin: 0px 5px 5px 5px; padding: 0px 5px 5px 5px',defaults:{bodyStyle:'border: none; padding: 0px 5px 5px 5px'},layoutConfig:{columns:2},id:'edit_route_table_panel',items:[{html:'<p>The <i>dark orange</i> circles you see on your route are the points you added.</p>'},{html:'<img src="/media/img/edit_route_1.png" />'},{html:'<p>The <i>light orange</i> circles between your points are \'ghost\' points and are used to create new points.</p>'},{html:'<img src="/media/img/edit_route_2.png" />'},{html:'<p><b><u>Moving</u></b>. Click and drag a dark orange cirle where you want, then release.</p>'},{html:'<img src="/media/img/edit_route_3.png" />'},{html:'<p><b><u>Adding</u></b>. Click a \'ghost\' point and drag it where you want, then release.</p>'},{html:'<img src="/media/img/edit_route_4.png" />'},{html:'<p><b><u>Removing</u></b>. Hold your mouse over a point and press the \'Delete\' key on your keyboard.</p>'},{html:'<img src="/media/img/edit_route_5.png" />'},{html:'<p class="video-link"><img class="video-img" src="/media/img/film_go.png"/> <a href="'+gwst.settings.urls.demo+'" target="_blank">Watch Demonstration</a>'}]});this.button_panel=new gwst.widgets.TwoButtonPanel({btn1_text:'Redraw instead',btn1_handler:this.redrawClicked.createDelegate(this),btn1_width:125,btn2_text:'Done editing',btn2_handler:this.saveEditRouteClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.table_panel);this.add(this.button_panel);gwst.widgets.EditRoutePanel.superclass.onRender.apply(this,arguments);},redrawClicked:function(){this.fireEvent('redraw-edit-route',this);},saveEditRouteClicked:function(){this.fireEvent('save-edit-route',this);}});Ext.reg('gwst-edit-route-panel',gwst.widgets.EditRoutePanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ErrorWindow=Ext.extend(Ext.Window,{initComponent:function(){Ext.apply(this,{title:'Error',layout:'fit',width:250,html:{tag:'div',id:'err_msg_panel',html:'Error'},height:100,plain:true,bodyStyle:'padding: 8px; font-weight: bold',closeAction:'hide',closable:false,modal:true,bbar:[{xtype:'tbfill'},{text:'OK',handler:this.okBtnClicked.createDelegate(this)}]});gwst.widgets.ErrorWindow.superclass.initComponent.call(this);},okBtnClicked:function(){this.hide();},load:function(msg){this.show();Ext.get('err_msg_panel').update(msg);}});Ext.reg('gwst-error-window',gwst.widgets.ErrorWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.FinishPanel=Ext.extend(gwst.widgets.WestPanel,{initComponent:function(){gwst.widgets.FinishPanel.superclass.initComponent.apply(this,arguments);},onRender:function(){this.header_panel=new Ext.Panel({id:'finish_header_panel',html:'<img src="/media/img/h_07_finished.png">',border:'north',bodyCfg:{cls:'action-panel-header'}});this.inner_panel=new Ext.Panel({html:'<p>Thank you for completing the survey for the month of '+gwst.settings.month+'.</p><p>Press the Continue button for more information about the prizes.</p>',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.TwoButtonPanel({btn2_text:'Continue >>',btn2_handler:this.contBtnClicked.createDelegate(this)});this.add(this.header_panel);this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.FinishPanel.superclass.onRender.apply(this,arguments);},contBtnClicked:function(){this.fireEvent('finish-cont',this);}});Ext.reg('gwst-finish-panel',gwst.widgets.FinishPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.InvalidRoutePanel=Ext.extend(gwst.widgets.WestPanel,{id:'invalid-route-panel',status_code:null,initComponent:function(){this.addEvents('okay-btn');gwst.widgets.InvalidRoutePanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config,status_code){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text=gwst.settings.shape_error_text;if(this.status_code==2){html_text+=gwst.settings.route_invalid_text;}
html_text+='<p>Click the \'Continue\' button to try again.</p>';return html_text;},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'invalid_route_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.TwoButtonPanel({btn2_text:'Continue >>',btn2_handler:this.contBtnClicked.createDelegate(this),btn2_width:110,left_margin:50});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.InvalidRoutePanel.superclass.onRender.apply(this,arguments);},contBtnClicked:function(){this.fireEvent('okay-btn',this);}});Ext.reg('gwst-invalid-route-panel',gwst.widgets.InvalidRoutePanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.InvalidShapePanel=Ext.extend(gwst.widgets.WestPanel,{id:'invalid-shape-panel',status_code:null,initComponent:function(){this.addEvents('okay-btn');gwst.widgets.InvalidShapePanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config,status_code){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text=gwst.settings.shape_error_text;if(this.status_code==2){html_text+=gwst.settings.invalid_poly_text;}
html_text+='<p>Click the \'Continue\' button to try again.</p>';return html_text;},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'invalid_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.TwoButtonPanel({btn2_text:'Continue >>',btn2_handler:this.contBtnClicked.createDelegate(this),btn2_width:110,left_margin:50});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.InvalidShapePanel.superclass.onRender.apply(this,arguments);},contBtnClicked:function(){this.fireEvent('okay-btn',this);}});Ext.reg('gwst-invalid-shape-panel',gwst.widgets.InvalidShapePanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.NavDetailsWindow=Ext.extend(Ext.Window,{initComponent:function(){Ext.apply(this,{title:'Map Navigation Details',layout:'fit',width:450,html:'<p class="help-win">Detailed Navigation Instructions:</p><ol><li class="help-win"><b>Move Map</b> - Click on the blue arrow buttons on the top left corner of the map, click & drag with your mouse, or use your keyboard arrows.</li><li class="help-win"><b>Zoom Map</b> - Zoom in and out by clicking the \'+\' and \'-\' buttons on the map or use the scroll wheel on your mouse if you have one.</li><li class="help-win">For even more detailed information, click the link for the \'detailed instructions\' page at the bottom of the screen.</li></ol>',height:350,plain:true,bodyStyle:'padding: 8px; font-weight: bold',closeAction:'hide',closable:true,modal:true,draggable:false,bbar:[{xtype:'tbfill'},{text:'Close',handler:this.closeBtnClicked.createDelegate(this)}]});gwst.widgets.NavDetailsWindow.superclass.initComponent.call(this);},closeBtnClicked:function(){this.hide();},load:function(){this.show();}});Ext.reg('gwst-nav-help-window',gwst.widgets.NavDetailsWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.NavHelpWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('view-nav-details');this.addEvents('close-nav-help');Ext.apply(this,{title:'Map Tool Orientation',layout:'fit',width:500,html:'<table class="help-table"><tr><td colspan=3><p class="help-win"><b>Map Navigation Buttons</b></p></td></tr><tr id="nav-help-row"><td><img src="/media/img/arrow_up-left.png" /></td><td><p class="help-win">Use these controls to move and zoom the map.</p></td><td style="width: 85px"><img style="width:39px; height:52px" src="/media/img/nav_arrows.png" /><img style="width:39px; height:52px" src="/media/img/nav_zoombar.png" /></td></tr><tr><td colspan=3><p class="help-win"><b>White Directions Panel</b></p></td></tr><tr id="directions-help-row"><td><img src="/media/img/arrow_left.png" /></td><td><p class="help-win">Instructions on what to do are given in this panel to the left of the map at each step of the way.</p></td><td><img style="width:39px; height:52px; border: 1px solid Gray" src="/media/img/west_panel.png" /></td></tr><tr><td colspan=3><p class="help-win"><b>Map Layer Switcher</b></p></td></tr><tr id="layer-help-row"><td><img src="/media/img/arrow_up-right.png" /></td><td><p class="help-win">Select different layers to change which base map is shown.</p></td><td><img border: 1px solid Gray" src="/media/img/layers.png" /></td></tr><tr><td colspan=3><p class="help-win"><b>Help Bar</b></p></td></tr><tr id="help-bar-help-row"><td><img src="/media/img/arrow_down.png" /></td><td><p class="help-win">If more help is needed, please refer to the information bar at the bottom of the screen.</p></td><td></td></tr></table>',plain:true,bodyStyle:'padding: 8px; font-weight: bold',closeAction:'hide',closable:true,modal:true,draggable:false,bbar:[{xtype:'tbfill'},{text:'View detailed navigation instructions',handler:this.instructionsBtnClicked.createDelegate(this)},{xtype:'tbseparator',width:15,height:28},{text:'<b>Continue to Mapping</b>',handler:this.closeBtnClicked.createDelegate(this),height:25}]});gwst.widgets.NavHelpWindow.superclass.initComponent.call(this);},instructionsBtnClicked:function(){this.fireEvent('view-nav-details',this);},closeBtnClicked:function(){this.hide();},load:function(){this.show();}});Ext.reg('gwst-nav-help-window',gwst.widgets.NavHelpWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.RoundTripWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('okay-route');this.addEvents('auto-return-route');this.addEvents('cont-route');Ext.apply(this,{title:'Route is not round-trip!',layout:'fit',width:500,html:'<p class="help-win">As drawn, your route does not return to your launch site.</p><p class="help-win">If you did not return to your launch site on this trip, click \'FINISHED\'.</p><p class="help-win">If you followed the same route back to your launch site, the mapping application can complete your route by clicking \'SAME WAY\'.</p><p class="help-win">If you need to finish plotting your return route, click \'PLOT RETURN\'.</p>',height:325,plain:true,bodyStyle:'padding: 8px; font-weight: bold',closeAction:'hide',closable:false,modal:true,draggable:false,bbar:[{xtype:'tbfill'},{text:'PLOT RETURN',handler:this.plotBtnClicked.createDelegate(this)},{xtype:'tbseparator',width:15},{text:'SAME WAY',handler:this.sameBtnClicked.createDelegate(this)},{xtype:'tbseparator',width:15},{text:'FINISHED',handler:this.closeBtnClicked.createDelegate(this)}]});gwst.widgets.RoundTripWindow.superclass.initComponent.call(this);},closeBtnClicked:function(){this.hide();this.fireEvent('okay-route');},sameBtnClicked:function(){this.hide();this.fireEvent('auto-return-route');},plotBtnClicked:function(){this.hide();this.fireEvent('cont-route');},load:function(){this.show();}});Ext.reg('gwst-round-trip-window',gwst.widgets.RoundTripWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ResetMapCheckWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('confirm');Ext.apply(this,{layout:'fit',width:350,html:'<p><b>Are you sure you want to reset the map window?</b><br /><br />Your routes and areas will not be lost.</p>',height:150,plain:true,bodyStyle:'padding: 8px',closeAction:'hide',closable:false,modal:true,bbar:[{xtype:'tbfill'},{text:'Yes',handler:this.yesBtnClicked.createDelegate(this)},{xtype:'tbseparator'},{text:'No',handler:this.noBtnClicked.createDelegate(this)}]});gwst.widgets.ResetMapCheckWindow.superclass.initComponent.call(this);},yesBtnClicked:function(){this.fireEvent('confirm');this.hide();},noBtnClicked:function(){this.hide();}});Ext.reg('gwst-reset-map-check-window',gwst.widgets.ResetMapCheckWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.ResetMapWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('reset-button');Ext.apply(this,{height:25,width:156,layout:'fit',html:'blort',closable:false,resizable:false,tbar:[{text:'Reset Map View',iconCls:'reset-map',handler:this.resetMap,scope:this}]});gwst.widgets.ResetMapWindow.superclass.initComponent.call(this);},resetMap:function(){this.fireEvent('reset-map');}});Ext.reg('gwst-reset-map-window',gwst.widgets.ResetMapWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.SatisfiedShapePanel=Ext.extend(gwst.widgets.WestPanel,{id:'satisfied-shape-panel',resource:'unknown',shape_name:'unknown',initComponent:function(){this.addEvents('satisfied');gwst.widgets.SatisfiedShapePanel.superclass.initComponent.apply(this,arguments);},updateText:function(text_config){Ext.apply(this,text_config);this.inner_panel.getEl().update(this.getHtmlText());},getHtmlText:function(){var html_text='<h3>Are you satisfied with this '+this.shape_name+'?</h3>';return html_text;},onRender:function(){this.inner_panel=new Ext.Panel({html:this.getHtmlText(),id:'satisfied_shape_inner_panel',style:'margin: 10px',border:false});this.button_panel=new gwst.widgets.YesNoButtons({yes_handler:this.yesClicked.createDelegate(this),no_handler:this.noClicked.createDelegate(this)});this.add(this.inner_panel);this.add(this.button_panel);gwst.widgets.SatisfiedShapePanel.superclass.onRender.apply(this,arguments);},yesClicked:function(){this.fireEvent('satisfied',{satisfied:true});},noClicked:function(){this.fireEvent('satisfied',{satisfied:false});}});Ext.reg('gwst-satisfied-shape-panel',gwst.widgets.SatisfiedShapePanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.TwoButtonPanel=Ext.extend(Ext.Panel,{btn1_handler:null,btn1_enabled:true,btn1_width:100,btn2_handler:null,btn2_enabled:true,btn2_width:100,btn_style:'margin-left: auto; margin-right: auto',initComponent:function(){Ext.apply(this,{style:'margin-top: 0px; margin-bottom: 15px; margin-left: auto; margin-right: auto; padding: 5px 0px 5px 5px',cls:'gwst-button-panel',layout:'table',border:false,width:260,defaults:{bodyStyle:'border: none'},layoutConfig:{columns:2}});gwst.widgets.TwoButtonPanel.superclass.initComponent.apply(this,arguments);},onRender:function(){if(this.btn1_handler){this.btn1=new Ext.Button({text:this.btn1_text,handler:this.btn1_handler,width:this.btn1_width});if(!this.btn1_enabled){this.btn1.disable();}
this.add({items:[this.btn1],width:this.btn1_width+10,style:this.btn_style});}else{this.add({html:'',width:this.btn1_width+10})};if(this.btn2_handler){this.btn2=new Ext.Button({text:this.btn2_text,handler:this.btn2_handler,width:this.btn2_width});if(!this.btn2_enabled){this.btn2.disable();}
this.add({items:[this.btn2],width:this.btn2_width+10,style:this.btn_style});}else{this.add({html:'',width:this.btn2_width+10});}
gwst.widgets.TwoButtonPanel.superclass.onRender.apply(this,arguments);},enableBtn2:function(){this.btn2.enable();},disableBtn2:function(){this.btn2.disable();}});Ext.reg('gwst-two-button-panel',gwst.widgets.TwoButtonPanel);Ext.namespace('gwst','gwst.widgets');gwst.widgets.UndoWindow=Ext.extend(Ext.Window,{initComponent:function(){this.addEvents('undo-clicked');Ext.apply(this,{height:25,width:80,layout:'fit',html:'',resizable:false,closable:false,collapsible:false,draggable:false,tbar:[{text:'Undo',iconCls:'undo-icon',handler:this.undoClicked,scope:this}]});gwst.widgets.UndoWindow.superclass.initComponent.call(this);},undoClicked:function(){this.fireEvent('undo-clicked');}});Ext.reg('gwst-undo-window',gwst.widgets.UndoWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.WaitWindow=Ext.extend(Ext.Window,{initComponent:function(){Ext.apply(this,{title:'Please Wait',layout:'fit',width:250,html:{tag:'div',id:'msg_panel',html:'Crock'},height:75,plain:true,bodyStyle:'padding: 8px; font-weight: bold',closeAction:'hide',closable:false,modal:true});gwst.widgets.WaitWindow.superclass.initComponent.call(this);},showMsg:function(msg){this.show();Ext.get('msg_panel').update(msg);}});Ext.reg('gwst-wait-window',gwst.widgets.WaitWindow);Ext.namespace('gwst','gwst.widgets');gwst.widgets.YesNoButtons=Ext.extend(Ext.Panel,{yes_handler:null,yes_text:'unknown',no_handler:null,no_text:'unknown',initComponent:function(){Ext.apply(this,{style:'margin: 15px 35px; padding: 5px',cls:'gwst-button-panel',layout:'table',border:false,defaults:{bodyStyle:'border: none; padding: 10px'},layoutConfig:{columns:2}});gwst.widgets.YesNoButtons.superclass.initComponent.apply(this,arguments);},onRender:function(){var yes=new Ext.Action({text:'Yes',handler:this.yes_handler});var no=new Ext.Action({text:'No',handler:this.no_handler});this.add({items:[new Ext.Button(yes)],width:65,style:'margin-left: 55px; margin-right: 10px'},{items:[new Ext.Button(no)],width:55});gwst.widgets.YesNoButtons.superclass.onRender.apply(this,arguments);}});Ext.reg('gwst-yes-no-buttons-panel',gwst.widgets.YesNoButtons);